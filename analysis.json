{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "property-document-mixin.html",
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "A mixin that contains common function for `property-*-document` elements.",
          "summary": "",
          "path": "property-document-mixin.html",
          "properties": [
            {
              "name": "amfModel",
              "type": "(Object | Array)",
              "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "A property shape definition of AMF.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 54,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Object"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "_computeRangeDataType",
              "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 4
                },
                "end": {
                  "line": 152,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "AMF property range object"
                }
              ],
              "return": {
                "type": "String",
                "desc": "Data type of the property."
              }
            },
            {
              "name": "_computeRange",
              "description": "Computes value for `range` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 158,
                  "column": 4
                },
                "end": {
                  "line": 175,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "shape",
                  "type": "Object",
                  "description": "Current shape object."
                }
              ],
              "return": {
                "type": "Object",
                "desc": "Range object"
              }
            },
            {
              "name": "_computeArrayProperties",
              "description": "Computes properties to render Array items documentation.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 182,
                  "column": 4
                },
                "end": {
                  "line": 214,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "(Array.<Object> | undefined)",
                "desc": "List of Array items."
              }
            },
            {
              "name": "_computeIsUnion",
              "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 223,
                  "column": 4
                },
                "end": {
                  "line": 225,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeIsObject",
              "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 234,
                  "column": 4
                },
                "end": {
                  "line": 236,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeIsArray",
              "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 245,
                  "column": 4
                },
                "end": {
                  "line": 247,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeUnionTypes",
              "description": "Computes list of union type labels to render.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 255,
                  "column": 4
                },
                "end": {
                  "line": 301,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isUnion",
                  "type": "Boolean"
                },
                {
                  "name": "range",
                  "type": "Object"
                }
              ],
              "return": {
                "type": "Array.<Object>"
              }
            },
            {
              "name": "_computeArrayUnionLabel",
              "description": "Computes union type label when the union is in Array.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 308,
                  "column": 4
                },
                "end": {
                  "line": 320,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items",
                  "type": "(Array | Object)",
                  "description": "Array's items property or a single property"
                }
              ],
              "return": {
                "type": "(String | undefined)",
                "desc": "Label for the union type."
              }
            },
            {
              "name": "_computeDisplayName",
              "description": "Computes name label for the shape.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 329,
                  "column": 4
                },
                "end": {
                  "line": 355,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                },
                {
                  "name": "shape",
                  "type": "Object",
                  "description": "The shape of the property."
                }
              ],
              "return": {
                "type": "String",
                "desc": "Display name of the property"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 358,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.PropertyDocumentMixin",
          "attributes": [
            {
              "name": "amf-model",
              "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 24
                }
              },
              "metadata": {},
              "type": "(Object | Array)"
            },
            {
              "name": "shape",
              "description": "A property shape definition of AMF.",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 54,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "range",
              "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "`property-range-document`\n\nRenders a documentation for a shape property of AMF model.\n\n## Styling\n\n`<property-range-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-range-document` | Mixin applied to this elment | `{}`\n`--api-type-document-type-attribute-color` | Color of each attribute that describes a property | `#616161`\n`--api-type-document-examples-title-color` | Color of examples section title | ``\n`--api-type-document-examples-border-color` | Example section border color | `transparent`\n`--code-background-color` | Background color of the examples section | ``\n`--arc-font-body1` | Mixin applied to an example name label | `{}`\n`--arc-font-body2` | Mixin applied to the examples section title | `{}`",
      "summary": "",
      "path": "property-range-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "hasExamples",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if there is a list of examples",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "examples",
          "type": "Array.<Object>",
          "description": "Computed list of examples",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "isEnum",
          "type": "boolean | null | undefined",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isUnion",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an union.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 225,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isFile",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is a File.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 8
            },
            "end": {
              "line": 241,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "parentTypeName",
          "type": "string | null | undefined",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 246,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "enumValues",
          "type": "Array.<String>",
          "description": "Computed values for list of enums.\nEnums are list of types names.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 8
            },
            "end": {
              "line": 256,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 4
            },
            "end": {
              "line": 315,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 326,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 255,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "(Array | Object)",
              "description": "Array's items property or a single property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 434,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 481,
              "column": 4
            },
            "end": {
              "line": 489,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 496,
              "column": 4
            },
            "end": {
              "line": 504,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 514,
              "column": 4
            },
            "end": {
              "line": 526,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 536,
              "column": 4
            },
            "end": {
              "line": 547,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 561,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 573,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 594,
              "column": 4
            },
            "end": {
              "line": 600,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 607,
              "column": 4
            },
            "end": {
              "line": 615,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 623,
              "column": 4
            },
            "end": {
              "line": 641,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 647,
              "column": 4
            },
            "end": {
              "line": 653,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 672,
              "column": 4
            },
            "end": {
              "line": 683,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 691,
              "column": 4
            },
            "end": {
              "line": 697,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 704,
              "column": 4
            },
            "end": {
              "line": 711,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 718,
              "column": 4
            },
            "end": {
              "line": 739,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 748,
              "column": 4
            },
            "end": {
              "line": 755,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 764,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 788,
              "column": 4
            },
            "end": {
              "line": 803,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 816,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 824,
              "column": 4
            },
            "end": {
              "line": 831,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 838,
              "column": 4
            },
            "end": {
              "line": 887,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 889,
              "column": 4
            },
            "end": {
              "line": 911,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 913,
              "column": 4
            },
            "end": {
              "line": 932,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 934,
              "column": 4
            },
            "end": {
              "line": 945,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 954,
              "column": 4
            },
            "end": {
              "line": 967,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 974,
              "column": 4
            },
            "end": {
              "line": 995,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1001,
              "column": 4
            },
            "end": {
              "line": 1027,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasExamples",
          "description": "Computes value for `hasExamples`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 267,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeExamplesValue",
          "description": "Computes list of examples for the property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 295,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasExamples",
              "type": "Boolean",
              "description": "Current value of `hasExamples`"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of examples.\nEach object has `value` property as a string example value. Also, it has\n`hasName` property describing if `name` property is set."
          }
        },
        {
          "name": "_computeIsEnum",
          "description": "Computes value `isEnum` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 304,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Current `range` object."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "Curently it always returns `false`"
          }
        },
        {
          "name": "_computeIsFile",
          "description": "Computes value for `isFile` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeObjectProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_computeEnumValues",
          "description": "Computes value for `enumValues` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 398,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isEnum",
              "type": "Boolean",
              "description": "Current value of `isEnum` property"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)",
            "desc": "List of enum types."
          }
        },
        {
          "name": "_computeExampleDisplay",
          "description": "Computes example value to set on `marked-element`.\nIt adds \"```\" to create a code block.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "Value to display"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeExamplesLabel",
          "description": "Computes label for examples section title.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "examples",
              "type": "Array",
              "description": "List of examples"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Correct form for examples"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 180,
          "column": 2
        },
        "end": {
          "line": 420,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.PropertyRangeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "has-examples",
          "description": "Computed value, true if there is a list of examples",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 8
            },
            "end": {
              "line": 193,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "examples",
          "description": "Computed list of examples",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "is-enum",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-union",
          "description": "Computed value, true if current property is an union.",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-object",
          "description": "Computed value, true if current property is an object.",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 225,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-array",
          "description": "Computed value, true if current property is an array.",
          "sourceRange": {
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-file",
          "description": "Computed value, true if current property is a File.",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 8
            },
            "end": {
              "line": 241,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 246,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "enum-values",
          "description": "Computed values for list of enums.\nEnums are list of types names.",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 8
            },
            "end": {
              "line": 256,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<String>"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "property-range-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin",
        "ApiElements.AmfHelperMixin"
      ]
    },
    {
      "description": "`property-shape-document`\n\nRenders a documentation for a shape property of AMF model.\n\n## Styling\n\n`<property-shape-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-shape-document` | Mixin applied to this elment | `{}`\n`--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`\n`--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`\n`--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`\n`--arc-font-subhead` | Theme mixin, applied to the property title | `{}`\n`--property-shape-document-title` | Mixin applied to the property title | `{}`\n`--api-type-document-property-parent-color` | Color of the parent property label | `#757575`\n`--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`\n`--api-type-document-child-docs-margin-left` | Margin left of item's properties description relative to the title when the item is a child of another property | `24px`\n`--api-type-document-type-color` | Color of the \"type\" trait | `white`\n`--api-type-document-type-background-color` | Background color of the \"type\" trait | `#2196F3`\n`--api-type-document-trait-background-color` | Background color to main range trait (type name) | `#EEEEEE`,\n`--api-type-document-trait-border-radius` | Border radious of a main property traits | `3px`\n`--api-type-document-property-name-width` | Width of the left hand side column with property name | `240px`",
      "summary": "",
      "path": "property-shape-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computed value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "displayName",
          "type": "string | null | undefined",
          "description": "Computed value of \"display name\" of the property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 8
            },
            "end": {
              "line": 259,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "propertyName",
          "type": "string | null | undefined",
          "description": "A type property name.\nThis may be different from `displayName` property if\n`displayName` was specified in the API spec for this property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 8
            },
            "end": {
              "line": 268,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasDisplayName",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `displayName` has been defined for this\nproperty.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 277,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isUnion",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an union.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 8
            },
            "end": {
              "line": 285,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 293,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if current property is an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isComplex",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if this propery contains a complex\nstructure. It is computed when the property is and array,\nobject, or union.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 8
            },
            "end": {
              "line": 310,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "parentTypeName",
          "type": "string | null | undefined",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 8
            },
            "end": {
              "line": 315,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasParentTypeName",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `parentTypeName` has a value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "propertyDataType",
          "type": "Object",
          "description": "Computed value of shape data type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 8
            },
            "end": {
              "line": 331,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "isRequired",
          "type": "boolean | null | undefined",
          "description": "Computed value form the shape. True if the property is required.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isEnum",
          "type": "boolean | null | undefined",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "propertyDescription",
          "type": "string | null | undefined",
          "description": "A description of the property to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasPropertyDescription",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if desceription is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 360,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "A property to set when the component is rendered in the narrow\nview. To be used with mobile rendering or when the\ncomponents occupies only small part of the screen.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 8
            },
            "end": {
              "line": 369,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 255,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "(Array | Object)",
              "description": "Array's items property or a single property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes value for `propertyDescription`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 4
            },
            "end": {
              "line": 469,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range model"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description to render."
          }
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 434,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 481,
              "column": 4
            },
            "end": {
              "line": 489,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 496,
              "column": 4
            },
            "end": {
              "line": 504,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 514,
              "column": 4
            },
            "end": {
              "line": 526,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 536,
              "column": 4
            },
            "end": {
              "line": 547,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 561,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 573,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 594,
              "column": 4
            },
            "end": {
              "line": 600,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 607,
              "column": 4
            },
            "end": {
              "line": 615,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 623,
              "column": 4
            },
            "end": {
              "line": 641,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 647,
              "column": 4
            },
            "end": {
              "line": 653,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 672,
              "column": 4
            },
            "end": {
              "line": 683,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 691,
              "column": 4
            },
            "end": {
              "line": 697,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 704,
              "column": 4
            },
            "end": {
              "line": 711,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 718,
              "column": 4
            },
            "end": {
              "line": 739,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 748,
              "column": 4
            },
            "end": {
              "line": 755,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 372,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            },
            {
              "name": "shape"
            }
          ]
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 788,
              "column": 4
            },
            "end": {
              "line": 803,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 816,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 824,
              "column": 4
            },
            "end": {
              "line": 831,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 838,
              "column": 4
            },
            "end": {
              "line": 887,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 889,
              "column": 4
            },
            "end": {
              "line": 911,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 913,
              "column": 4
            },
            "end": {
              "line": 932,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 934,
              "column": 4
            },
            "end": {
              "line": 945,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 954,
              "column": 4
            },
            "end": {
              "line": 967,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 974,
              "column": 4
            },
            "end": {
              "line": 995,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1001,
              "column": 4
            },
            "end": {
              "line": 1027,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyName",
          "description": "Computes name of the property. This may be different from the\n`displayName` if `displayName` is set in API spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          }
        },
        {
          "name": "_computeHasDisplayName",
          "description": "Computes value for `hasDisplayName` property.\nIndicates that `displayName` has been defined in the API specification.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 4
            },
            "end": {
              "line": 422,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayName",
              "type": "String"
            },
            {
              "name": "propertyName",
              "type": "String"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeHasParentTypeName",
          "description": "Computes value for `hasParentTypeName`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 430,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parentTypeName",
              "type": "String?"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsRequired",
          "description": "Computes value for `isRequired` property.\nIn AMF model a property is required when `http://www.w3.org/ns/shacl#minCount`\ndoes not equal `0`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 439,
              "column": 4
            },
            "end": {
              "line": 449,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsEnum",
          "description": "Computes value `isEnum` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 455,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Current `range` object."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "Curently it always returns `false`"
          }
        },
        {
          "name": "_computeIsComplex",
          "description": "Computes value for `isComplex` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 4
            },
            "end": {
              "line": 479,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "isObject",
              "type": "Boolean"
            },
            {
              "name": "isArray",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 240,
          "column": 2
        },
        "end": {
          "line": 480,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.PropertyShapeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 128,
              "column": 8
            },
            "end": {
              "line": 128,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computed value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 8
            },
            "end": {
              "line": 252,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "display-name",
          "description": "Computed value of \"display name\" of the property",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 8
            },
            "end": {
              "line": 259,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "property-name",
          "description": "A type property name.\nThis may be different from `displayName` property if\n`displayName` was specified in the API spec for this property.",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 8
            },
            "end": {
              "line": 268,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-display-name",
          "description": "Computed value, true if `displayName` has been defined for this\nproperty.",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 277,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-union",
          "description": "Computed value, true if current property is an union.",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 8
            },
            "end": {
              "line": 285,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-object",
          "description": "Computed value, true if current property is an object.",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 293,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-array",
          "description": "Computed value, true if current property is an array.",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-complex",
          "description": "Computed value, true if this propery contains a complex\nstructure. It is computed when the property is and array,\nobject, or union.",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 8
            },
            "end": {
              "line": 310,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 8
            },
            "end": {
              "line": 315,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-parent-type-name",
          "description": "Computed value, true if `parentTypeName` has a value.",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 8
            },
            "end": {
              "line": 323,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "property-data-type",
          "description": "Computed value of shape data type",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 8
            },
            "end": {
              "line": 331,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "is-required",
          "description": "Computed value form the shape. True if the property is required.",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 8
            },
            "end": {
              "line": 338,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-enum",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 8
            },
            "end": {
              "line": 345,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "property-description",
          "description": "A description of the property to render.",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 8
            },
            "end": {
              "line": 352,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-property-description",
          "description": "Computed value, true if desceription is set.",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 360,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "narrow",
          "description": "A property to set when the component is rendered in the narrow\nview. To be used with mobile rendering or when the\ncomponents occupies only small part of the screen.",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 8
            },
            "end": {
              "line": 369,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "property-shape-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin",
        "ApiElements.AmfHelperMixin"
      ]
    },
    {
      "description": "`api-type-document`\n\nAn element that recuresively renders a documentation for a data type\nusing from model.\n\nPass AMF's shape type `property` array to render the documentation.\n\n## Styling\n\n`<api-type-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--api-type-document` | Mixin applied to this elment | `{}`\n`--api-type-document-union-button-background-color` | Background color of union selector button | `#fff`\n`--api-type-document-union-button-color` | Color of union selector button | `#000`\n`--api-type-document-union-button-active-background-color` | Background color of active union selector button | `#CDDC39`\n`--api-type-document-union-button-active-color` | Color of active union selector button | `#000`\n\nFrom `property-shape-document`\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-shape-document` | Mixin applied each proeprty element | `{}`\n`--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`\n`--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`\n`--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`\n`--arc-font-subhead` | Theme mixin, applied to the property title | `{}`\n`--property-shape-document-title` | Mixin applied to the property title | `{}`\n`--api-type-document-property-parent-color` | Color of the parent property label | `#757575`\n`--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`\n`--api-type-document-child-docs-margin-left` | Margin left of the item's properties description relative to the title when the item is a child property of another property | `24px`\n`--api-type-document-type-color` | Color of the \"type\" trait | `white`\n`--api-type-document-type-background-color` | Background color of the \"type\" trait | `#2196F3`\n`--api-type-document-trait-background-color` | Background color to main range trait (type, required, enum) | `#EEEEEE`,\n`--api-type-document-trait-border-radius` | Border radious of a main property traits like type, required, enum | `3px`\n\nFrom `property-range-document`\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-range-document` | Mixin applied to this elment | `{}`\n`--api-type-document-type-attribute-color` | Color of each attribute that describes a property | `#616161`\n`--api-type-document-examples-title-color` | Color of examples section title | ``\n`--api-type-document-examples-border-color` | Example section border color | `transparent`\n`--code-background-color` | Background color of the examples section | ``\n`--arc-font-body1` | Mixin applied to an example name label | `{}`\n`--arc-font-body2` | Mixin applied to the examples section title | `{}`",
      "summary": "",
      "path": "api-type-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "aware",
          "type": "string | null | undefined",
          "description": "`raml-aware` scope property to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "type",
          "type": "(Object | Array)",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)\n\nIt also accepts array of properties like list of headers or\nparameters.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_resolvedType",
          "type": "Object | null | undefined",
          "description": "The type after it has been resolved.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 8
            },
            "end": {
              "line": 200,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "parentTypeName",
          "type": "string | null | undefined",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "hasParentType",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the shape has parent type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isScalar",
          "type": "boolean | null | undefined",
          "description": "True if given `type` is a scalar property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean | null | undefined",
          "description": "True if given `type` is an array property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean | null | undefined",
          "description": "True if given `type` is an object property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 235,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isUnion",
          "type": "boolean | null | undefined",
          "description": "True if given `type` is an union property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isAnd",
          "type": "boolean | null | undefined",
          "description": "True if given `type` is OAS \"and\" type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "unionTypes",
          "type": "Array.<Object>",
          "description": "Computed list of union type types to render in union type\nselector.\nEach item has `label` and `isScalar` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unionTypesChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "andTypes",
          "type": "Array | null | undefined",
          "description": "List of types definition and name for OAS' \"and\" type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 266,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "selectedUnion",
          "type": "number | null | undefined",
          "description": "Selected index of union type in `unionTypes` array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "A property to set when the component is rendered in the narrow\nview. To be used with mobile rendering or when the\ncomponents occupies only small part of the screen.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 175,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 225,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 234,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 245,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 255,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 320,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "(Array | Object)",
              "description": "Array's items property or a single property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 260,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 279,
              "column": 4
            },
            "end": {
              "line": 282,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 300,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 309,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 351,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 353,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 422,
              "column": 4
            },
            "end": {
              "line": 434,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 441,
              "column": 4
            },
            "end": {
              "line": 454,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 461,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 481,
              "column": 4
            },
            "end": {
              "line": 489,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 496,
              "column": 4
            },
            "end": {
              "line": 504,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 514,
              "column": 4
            },
            "end": {
              "line": 526,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 536,
              "column": 4
            },
            "end": {
              "line": 547,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 557,
              "column": 4
            },
            "end": {
              "line": 561,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 573,
              "column": 4
            },
            "end": {
              "line": 587,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 594,
              "column": 4
            },
            "end": {
              "line": 600,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 607,
              "column": 4
            },
            "end": {
              "line": 615,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 623,
              "column": 4
            },
            "end": {
              "line": 641,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 647,
              "column": 4
            },
            "end": {
              "line": 653,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 661,
              "column": 4
            },
            "end": {
              "line": 664,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 672,
              "column": 4
            },
            "end": {
              "line": 683,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 691,
              "column": 4
            },
            "end": {
              "line": 697,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 704,
              "column": 4
            },
            "end": {
              "line": 711,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 718,
              "column": 4
            },
            "end": {
              "line": 739,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 748,
              "column": 4
            },
            "end": {
              "line": 755,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 764,
              "column": 4
            },
            "end": {
              "line": 781,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 788,
              "column": 4
            },
            "end": {
              "line": 803,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 811,
              "column": 4
            },
            "end": {
              "line": 816,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 824,
              "column": 4
            },
            "end": {
              "line": 831,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 838,
              "column": 4
            },
            "end": {
              "line": 887,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 889,
              "column": 4
            },
            "end": {
              "line": 911,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 913,
              "column": 4
            },
            "end": {
              "line": 932,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 934,
              "column": 4
            },
            "end": {
              "line": 945,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 954,
              "column": 4
            },
            "end": {
              "line": 967,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 974,
              "column": 4
            },
            "end": {
              "line": 995,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1001,
              "column": 4
            },
            "end": {
              "line": 1027,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__typeChanged",
          "description": "Called when resolved type or amfModel changed.\nCreates a debouncer to compute UI values so it's independent of\norder of assigning properties.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_typeChanged",
          "description": "Handles type change. Sets basic view control properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 4
            },
            "end": {
              "line": 343,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "(Array | Object)",
              "description": "Passed type/"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeArrayParentName",
          "description": "Computes parent name for the array type table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent",
              "type": "?String",
              "description": "`parentTypeName` if available"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Parent type name of refault value for array type."
          }
        },
        {
          "name": "_unionTypesChanged",
          "description": "Resets union selection when union types list changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "types",
              "type": "?Array",
              "description": "List of current union types."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_selectUnion",
          "description": "Handler for union type button click.\nSets `selectedUnion` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 377,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_unionTypeActive",
          "description": "Computes if selectedUnion equals current item index.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedUnion",
              "type": "Number"
            },
            {
              "name": "index",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeUnionProperty",
          "description": "Computes properties for union type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 428,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "Object",
              "description": "Current `type` value."
            },
            {
              "name": "selected",
              "type": "Number",
              "description": "Selected union index from `unionTypes` array"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Properties for union type."
          }
        },
        {
          "name": "_computeProperties",
          "description": "Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`\nfrom the shape model",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 445,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Range object"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "Shape object"
          }
        },
        {
          "name": "_computeAndTypes",
          "description": "Computes list values for `andTypes` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 4
            },
            "end": {
              "line": 472,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array.<Object>",
              "description": "List of OAS' \"and\" properties"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "An array of type definitions and label to render"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 162,
          "column": 2
        },
        "end": {
          "line": 473,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiTypeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 181,
              "column": 24
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 132,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "aware",
          "description": "`raml-aware` scope property to use.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "type",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)\n\nIt also accepts array of properties like list of headers or\nparameters.",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 20
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 205,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-parent-type",
          "description": "Computed value, true if the shape has parent type.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-scalar",
          "description": "True if given `type` is a scalar property",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-array",
          "description": "True if given `type` is an array property",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-object",
          "description": "True if given `type` is an object property",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 235,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-union",
          "description": "True if given `type` is an union property",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-and",
          "description": "True if given `type` is OAS \"and\" type.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "union-types",
          "description": "Computed list of union type types to render in union type\nselector.\nEach item has `label` and `isScalar` property.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "and-types",
          "description": "List of types definition and name for OAS' \"and\" type",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 266,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "selected-union",
          "description": "Selected index of union type in `unionTypes` array.",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 8
            },
            "end": {
              "line": 272,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "narrow",
          "description": "A property to set when the component is rendered in the narrow\nview. To be used with mobile rendering or when the\ncomponents occupies only small part of the screen.",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 8
            },
            "end": {
              "line": 278,
              "column": 23
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-type-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin",
        "ApiElements.AmfHelperMixin"
      ]
    }
  ]
}
