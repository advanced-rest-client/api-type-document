{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "property-document-mixin.html",
        "start": {
          "line": 21,
          "column": 2
        },
        "end": {
          "line": 21,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "A mixin that contains common function for `property-*-document` elements.",
          "summary": "",
          "path": "property-document-mixin.html",
          "properties": [
            {
              "name": "amfModel",
              "type": "(Object | Array)",
              "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 24
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "A property shape definition of AMF.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 54,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 21
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "_computeRangeDataType",
              "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 69,
                  "column": 4
                },
                "end": {
                  "line": 102,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "AMF property range object"
                }
              ],
              "return": {
                "type": "String",
                "desc": "Data type of the property."
              }
            },
            {
              "name": "_computeRange",
              "description": "Computes value for `range` property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 108,
                  "column": 4
                },
                "end": {
                  "line": 123,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "shape",
                  "type": "Object",
                  "description": "Current shape object."
                }
              ],
              "return": {
                "type": "Object",
                "desc": "Range object"
              }
            },
            {
              "name": "_hasType",
              "description": "Checks if property item has a type.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 130,
                  "column": 4
                },
                "end": {
                  "line": 136,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "model",
                  "type": "Object",
                  "description": "Model item."
                },
                {
                  "name": "type",
                  "type": "String",
                  "description": "A type to lookup"
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_getValue",
              "description": "Gets a signle scalar value from a model.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 143,
                  "column": 4
                },
                "end": {
                  "line": 153,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "model",
                  "type": "Object",
                  "description": "Amf model to extract the value from."
                },
                {
                  "name": "key",
                  "type": "String",
                  "description": "Model key to search for the value"
                }
              ],
              "return": {
                "type": "any",
                "desc": "Value for key"
              }
            },
            {
              "name": "_getValues",
              "description": "Gets a list of scalar values from a model.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 160,
                  "column": 4
                },
                "end": {
                  "line": 166,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "model",
                  "type": "Object",
                  "description": "Amf model to extract the value from."
                },
                {
                  "name": "key",
                  "type": "String",
                  "description": "Model key to search for the value"
                }
              ],
              "return": {
                "type": "Array.<any>",
                "desc": "Value for key"
              }
            },
            {
              "name": "_computeProperties",
              "description": "Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`\nfrom the shape model",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 174,
                  "column": 4
                },
                "end": {
                  "line": 179,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "item",
                  "type": "Object",
                  "description": "Range object"
                }
              ],
              "return": {
                "type": "Object",
                "desc": "Shape object"
              }
            },
            {
              "name": "_computeArrayProperties",
              "description": "Computes properties to render Array items documentation.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 186,
                  "column": 4
                },
                "end": {
                  "line": 196,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "(Array.<Object> | undefined)",
                "desc": "List of Array items."
              }
            },
            {
              "name": "_computeIsUnion",
              "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 205,
                  "column": 4
                },
                "end": {
                  "line": 207,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeIsObject",
              "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 216,
                  "column": 4
                },
                "end": {
                  "line": 218,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeIsArray",
              "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 227,
                  "column": 4
                },
                "end": {
                  "line": 229,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                }
              ],
              "return": {
                "type": "Boolean"
              }
            },
            {
              "name": "_computeUnionTypes",
              "description": "Computes list of union type labels to render.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 237,
                  "column": 4
                },
                "end": {
                  "line": 277,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "isUnion",
                  "type": "Boolean"
                },
                {
                  "name": "range",
                  "type": "Object"
                }
              ],
              "return": {
                "type": "Array.<Object>"
              }
            },
            {
              "name": "_computeArrayUnionLabel",
              "description": "Computes union type label when the union is in Array.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 284,
                  "column": 4
                },
                "end": {
                  "line": 293,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "items",
                  "type": "Array",
                  "description": "Array items property"
                }
              ],
              "return": {
                "type": "(String | undefined)",
                "desc": "Label for the union type."
              }
            },
            {
              "name": "_computeDisplayName",
              "description": "Computes name label for the shape.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 302,
                  "column": 4
                },
                "end": {
                  "line": 328,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "range",
                  "type": "Object",
                  "description": "Range object of current shape."
                },
                {
                  "name": "shape",
                  "type": "Object",
                  "description": "The shape of the property."
                }
              ],
              "return": {
                "type": "String",
                "desc": "Display name of the property"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 0
            },
            "end": {
              "line": 331,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.PropertyDocumentMixin",
          "attributes": [
            {
              "name": "amf-model",
              "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
              "sourceRange": {
                "start": {
                  "line": 48,
                  "column": 8
                },
                "end": {
                  "line": 48,
                  "column": 24
                }
              },
              "metadata": {},
              "type": "(Object | Array)"
            },
            {
              "name": "shape",
              "description": "A property shape definition of AMF.",
              "sourceRange": {
                "start": {
                  "line": 54,
                  "column": 8
                },
                "end": {
                  "line": 54,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "Object"
            },
            {
              "name": "range",
              "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 59,
                  "column": 21
                }
              },
              "metadata": {},
              "type": "Object"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "`property-range-document`\n\nRenders a documentation for a shape property of AMF model.\n\n## Styling\n\n`<property-range-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-range-document` | Mixin applied to this elment | `{}`\n`--api-type-document-trait-background-color` | Background color to main range trait (type, required, enum) | `#EEEEEE`\n`--api-type-document-type-background-color` | Background color of the \"type\" trait | `#2196F3`\n`--api-type-document-type-attribute-color` | Color of each attribute that describes a property | `#616161`",
      "summary": "",
      "path": "property-range-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "hasExamples",
          "type": "boolean",
          "description": "Computed value, true if there is a list of examples",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "examples",
          "type": "Array.<Object>",
          "description": "Computed list of examples",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "propertyDataType",
          "type": "Object",
          "description": "Computed value of shape data type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "isRequired",
          "type": "boolean",
          "description": "Computed value form the shape. True if the property is required.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 235,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isEnum",
          "type": "boolean",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "propertyDescription",
          "type": "string",
          "description": "A description of the property to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isUnion",
          "type": "boolean",
          "description": "Computed value, true if current property is an union.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean",
          "description": "Computed value, true if current property is an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 9
            },
            "end": {
              "line": 265,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean",
          "description": "Computed value, true if current property is an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 8
            },
            "end": {
              "line": 273,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isFile",
          "type": "boolean",
          "description": "Computed value, true if current property is a File.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 281,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "parentTypeName",
          "type": "string",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 8
            },
            "end": {
              "line": 286,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "enumValues",
          "type": "Array.<String>",
          "description": "Computed values for list of enums.\nEnums are list of types names.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if property item has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model item."
            },
            {
              "name": "type",
              "type": "String",
              "description": "A type to lookup"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValues",
          "description": "Gets a list of scalar values from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeProperties",
          "description": "Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`\nfrom the shape model",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Range object"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Shape object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 418,
              "column": 4
            },
            "end": {
              "line": 428,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          }
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 4
            },
            "end": {
              "line": 378,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 4
            },
            "end": {
              "line": 390,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "Array items property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeType",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            },
            {
              "name": "shape"
            }
          ]
        },
        {
          "name": "_computeHasExamples",
          "description": "Computes value for `hasExamples`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeExamplesValue",
          "description": "Computes list of examples for the property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasExamples",
              "type": "Boolean",
              "description": "Current value of `hasExamples`"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of examples.\nEach object has `value` property as a string example value. Also, it has\n`hasName` property describing if `name` property is set."
          }
        },
        {
          "name": "_computeIsEnum",
          "description": "Computes value `isEnum` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Current `range` object."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "Curently it always returns `false`"
          }
        },
        {
          "name": "_computeDescription",
          "description": "Computes value for `propertyDescription`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range model"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description to render."
          }
        },
        {
          "name": "_computeIsFile",
          "description": "Computes value for `isFile` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 4
            },
            "end": {
              "line": 411,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeObjectProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 435,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_computeEnumValues",
          "description": "Computes value for `enumValues` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 443,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isEnum",
              "type": "Boolean",
              "description": "Current value of `isEnum` property"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)",
            "desc": "List of enum types."
          }
        },
        {
          "name": "_computeEnumIterator",
          "description": "Computesa value for the `enum` property in the view model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 4
            },
            "end": {
              "line": 474,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Current model item for `shacl#in` namespace"
            },
            {
              "name": "result",
              "type": "Array",
              "description": "Collected values."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Final result."
          }
        },
        {
          "name": "_hasProperty",
          "description": "Computes value if a property exists in a model",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 482,
              "column": 4
            },
            "end": {
              "line": 484,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "An object to test"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name to look for"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeExampleDisplay",
          "description": "Computes example value to set on `marked-element`.\nIt adds \"```\" to create a code block.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 492,
              "column": 4
            },
            "end": {
              "line": 497,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "Value to display"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeIsRequired",
          "description": "Computes value for `isRequired` property.\nIn AMF model a property is required when `http://www.w3.org/ns/shacl#minCount`\ndoes not equal `0`.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 4
            },
            "end": {
              "line": 509,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 202,
          "column": 2
        },
        "end": {
          "line": 510,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.PropertyRangeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 24
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "has-examples",
          "description": "Computed value, true if there is a list of examples",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "examples",
          "description": "Computed list of examples",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 8
            },
            "end": {
              "line": 221,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "property-data-type",
          "description": "Computed value of shape data type",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 8
            },
            "end": {
              "line": 228,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "is-required",
          "description": "Computed value form the shape. True if the property is required.",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 235,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-enum",
          "description": "Computed value form the shape. True if the property is ENUM.",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "property-description",
          "description": "A description of the property to render.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "is-union",
          "description": "Computed value, true if current property is an union.",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 8
            },
            "end": {
              "line": 257,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-object",
          "description": "Computed value, true if current property is an object.",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 9
            },
            "end": {
              "line": 265,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-array",
          "description": "Computed value, true if current property is an array.",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 8
            },
            "end": {
              "line": 273,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-file",
          "description": "Computed value, true if current property is a File.",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 8
            },
            "end": {
              "line": 281,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 8
            },
            "end": {
              "line": 286,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "enum-values",
          "description": "Computed values for list of enums.\nEnums are list of types names.",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 8
            },
            "end": {
              "line": 296,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<String>"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "property-range-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin"
      ]
    },
    {
      "description": "`property-shape-document`\n\nRenders a documentation for a shape property of AMF model.\n\n## Styling\n\n`<property-shape-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-shape-document` | Mixin applied to this elment | `{}`\n`--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`\n`--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`\n`--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`\n`--arc-font-subhead` | Theme mixin, applied to the property title | `{}`\n`--property-shape-document-title` | Mixin applied to the property title | `{}`\n`--api-type-document-property-parent-color` | Color of the parent property label | `#757575`\n`--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`",
      "summary": "",
      "path": "property-shape-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computed value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "displayName",
          "type": "string",
          "description": "Computed value of \"display name\" of the property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "propertyName",
          "type": "string",
          "description": "A type property name.\nThis may be different from `displayName` property if\n`displayName` was specified in the API spec for this property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 154,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "hasDisplayName",
          "type": "boolean",
          "description": "Computed value, true if `displayName` has been defined for this\nproperty.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isUnion",
          "type": "boolean",
          "description": "Computed value, true if current property is an union.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean",
          "description": "Computed value, true if current property is an object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 9
            },
            "end": {
              "line": 178,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean",
          "description": "Computed value, true if current property is an array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "parentTypeName",
          "type": "string",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 8
            },
            "end": {
              "line": 191,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if property item has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model item."
            },
            {
              "name": "type",
              "type": "String",
              "description": "A type to lookup"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValues",
          "description": "Gets a list of scalar values from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeProperties",
          "description": "Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`\nfrom the shape model",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Range object"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Shape object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 207,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "Array items property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computePropertyName",
          "description": "Computes name of the property. This may be different from the\n`displayName` if `displayName` is set in API spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          }
        },
        {
          "name": "_computeHasDisplayName",
          "description": "Computes value for `hasDisplayName` property.\nIndicates that `displayName` has been defined in the API specification.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 4
            },
            "end": {
              "line": 228,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_borderHover",
          "description": "Sets \"active\" attribute on this element when the border is hovered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 4
            },
            "end": {
              "line": 236,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_borderBlur",
          "description": "Removes \"active\" attribute on this element when the border is not hovered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 127,
          "column": 2
        },
        "end": {
          "line": 245,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.PropertyShapeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 48,
              "column": 8
            },
            "end": {
              "line": 48,
              "column": 24
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computed value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 8
            },
            "end": {
              "line": 138,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "display-name",
          "description": "Computed value of \"display name\" of the property",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 8
            },
            "end": {
              "line": 145,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "property-name",
          "description": "A type property name.\nThis may be different from `displayName` property if\n`displayName` was specified in the API spec for this property.",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 154,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "has-display-name",
          "description": "Computed value, true if `displayName` has been defined for this\nproperty.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-union",
          "description": "Computed value, true if current property is an union.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 8
            },
            "end": {
              "line": 170,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-object",
          "description": "Computed value, true if current property is an object.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 9
            },
            "end": {
              "line": 178,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-array",
          "description": "Computed value, true if current property is an array.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 8
            },
            "end": {
              "line": 186,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 8
            },
            "end": {
              "line": 191,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "property-shape-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin"
      ]
    },
    {
      "description": "`api-type-document`\n\nAn element that recuresively renders a documentation for a data type\nusing from model.\n\nPass AMF's shape type `property` array to render the documentation.\n\n## Styling\n\n`<api-type-document>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--api-type-document` | Mixin applied to this elment | `{}`\n\nFrom `property-shape-document`\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-shape-document` | Mixin applied each proeprty element | `{}`\n`--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`\n`--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`\n`--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`\n`--arc-font-subhead` | Theme mixin, applied to the property title | `{}`\n`--property-shape-document-title` | Mixin applied to the property title | `{}`\n`--api-type-document-property-parent-color` | Color of the parent property label | `#757575`\n`--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`\n\nFrom `property-range-document`\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--property-range-document` | Mixin applied to this elment | `{}`\n`--api-type-document-trait-background-color` | Background color to main range trait (type, required, enum) | `#EEEEEE`\n`--api-type-document-type-background-color` | Background color of the \"type\" trait | `#2196F3`\n`--api-type-document-type-attribute-color` | Color of each attribute that describes a property | `#616161`",
      "summary": "",
      "path": "api-type-document.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 8
            },
            "end": {
              "line": 112,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "shape",
          "type": "Object",
          "description": "A property shape definition of AMF.",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "privacy": "public",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "aware",
          "type": "string",
          "description": "`raml-aware` scope property to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "type",
          "type": "(Object | Array)",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)\n\nIt also accepts array of properties like list of headers or\nparameters.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_typeChanged\""
            }
          }
        },
        {
          "name": "parentTypeName",
          "type": "string",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 134,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "isScalar",
          "type": "boolean",
          "description": "True if given `type` is a scalar property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isArray",
          "type": "boolean",
          "description": "True if given `type` is an array property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 8
            },
            "end": {
              "line": 148,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isObject",
          "type": "boolean",
          "description": "True if given `type` is an object property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "isUnion",
          "type": "boolean",
          "description": "True if given `type` is an union property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "unionTypes",
          "type": "Array.<Object>",
          "description": "Computed list of union type types to render in union type\nselector.\nEach item has `label` and `isScalar` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 8
            },
            "end": {
              "line": 173,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unionTypesChanged\""
            }
          }
        },
        {
          "name": "selectedUnion",
          "type": "number",
          "description": "Selected index of union type in `unionTypes` array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_computeRangeDataType",
          "description": "Computes type from a `http://raml.org/vocabularies/shapes#range` object",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF property range object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type of the property."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeRange",
          "description": "Computes value for `range` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 108,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "Current shape object."
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Range object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if property item has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model item."
            },
            {
              "name": "type",
              "type": "String",
              "description": "A type to lookup"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 143,
              "column": 4
            },
            "end": {
              "line": 153,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_getValues",
          "description": "Gets a list of scalar values from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 166,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeProperties",
          "description": "Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`\nfrom the shape model",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 179,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Range object"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Shape object"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayProperties",
          "description": "Computes properties to render Array items documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 186,
              "column": 4
            },
            "end": {
              "line": 196,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of Array items."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsUnion",
          "description": "Computes value for `isUnion` property.\nUnion type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 205,
              "column": 4
            },
            "end": {
              "line": 207,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsObject",
          "description": "Computes value for `isObject` property.\nObject type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 216,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeIsArray",
          "description": "Computes value for `isArray` property.\nArray type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`\ntype.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 227,
              "column": 4
            },
            "end": {
              "line": 229,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeUnionTypes",
          "description": "Computes list of union type labels to render.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 237,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isUnion",
              "type": "Boolean"
            },
            {
              "name": "range",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array.<Object>"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeArrayUnionLabel",
          "description": "Computes union type label when the union is in Array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items",
              "type": "Array",
              "description": "Array items property"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Label for the union type."
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_computeDisplayName",
          "description": "Computes name label for the shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Range object of current shape."
            },
            {
              "name": "shape",
              "type": "Object",
              "description": "The shape of the property."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Display name of the property"
          },
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "_hasTypeChangeRecord",
          "description": "Checks if property item has a type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 4
            },
            "end": {
              "line": 194,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record",
              "type": "Object",
              "description": "Model item change record."
            },
            {
              "name": "type",
              "type": "String",
              "description": "A type to lookup"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_typeChanged",
          "description": "Handles type change. Sets basic view control properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 4
            },
            "end": {
              "line": 224,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "(Array | Object)",
              "description": "Passed type/"
            }
          ]
        },
        {
          "name": "_computeArrayParentName",
          "description": "Computes parent name for the array type table.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 233,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "parent",
              "type": "?String",
              "description": "`parentTypeName` if available"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Parent type name of refault value for array type."
          }
        },
        {
          "name": "_unionTypesChanged",
          "description": "Resets union selection when union types list changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "types",
              "type": "?Array",
              "description": "List of current union types."
            }
          ]
        },
        {
          "name": "_selectUnion",
          "description": "Handler for union type button click.\nSets `selectedUnion` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ]
        },
        {
          "name": "_unionTypeActive",
          "description": "Computes if selectedUnion equals current item index.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedUnion",
              "type": "Number"
            },
            {
              "name": "index",
              "type": "Number"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeUnionProperty",
          "description": "Computes properties for union type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 291,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "Object",
              "description": "Current `type` value."
            },
            {
              "name": "selected",
              "type": "Number",
              "description": "Selected union index from `unionTypes` array"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Properties for union type."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 94,
          "column": 2
        },
        "end": {
          "line": 292,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiTypeDocument",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 8
            },
            "end": {
              "line": 112,
              "column": 24
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "shape",
          "description": "A property shape definition of AMF.",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 54,
              "column": 8
            },
            "end": {
              "line": 54,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "range",
          "description": "Computes value of shape's http://raml.org/vocabularies/shapes#range",
          "sourceRange": {
            "file": "property-document-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "ArcBehaviors.PropertyDocumentMixin"
        },
        {
          "name": "aware",
          "description": "`raml-aware` scope property to use.",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "type",
          "description": "A type definition to render.\nThis should be a one of the following AMF types:\n\n- `http://www.w3.org/ns/shacl#NodeShape` (Object)\n- `http://raml.org/vocabularies/shapes#UnionShape` (Union)\n- `http://raml.org/vocabularies/shapes#ArrayShape` (Array)\n- `http://raml.org/vocabularies/shapes#ScalarShape` (single property)\n\nIt also accepts array of properties like list of headers or\nparameters.",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 9
            }
          },
          "metadata": {},
          "type": "(Object | Array)"
        },
        {
          "name": "parent-type-name",
          "description": "Should be set if described properties has a parent type.\nThis is used when recursively iterating over properties.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 8
            },
            "end": {
              "line": 134,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "is-scalar",
          "description": "True if given `type` is a scalar property",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 8
            },
            "end": {
              "line": 141,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-array",
          "description": "True if given `type` is an array property",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 8
            },
            "end": {
              "line": 148,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-object",
          "description": "True if given `type` is an object property",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 8
            },
            "end": {
              "line": 155,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-union",
          "description": "True if given `type` is an union property",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "union-types",
          "description": "Computed list of union type types to render in union type\nselector.\nEach item has `label` and `isScalar` property.",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 8
            },
            "end": {
              "line": 173,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array.<Object>"
        },
        {
          "name": "selected-union",
          "description": "Selected index of union type in `unionTypes` array.",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-type-document",
      "mixins": [
        "ArcBehaviors.PropertyDocumentMixin"
      ]
    }
  ]
}
