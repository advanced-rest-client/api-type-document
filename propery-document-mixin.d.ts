/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   propery-document-mixin.html
 */

/// <reference path="../polymer/types/lib/utils/mixin.d.ts" />

declare namespace ArcBehaviors {


  /**
   * A mixin that contains common function for `property-*-document` elements.
   */
  function PropertyDocumentMixin<T extends new (...args: any[]) => {}>(base: T): T & PropertyDocumentMixinConstructor;

  interface PropertyDocumentMixinConstructor {
    new(...args: any[]): PropertyDocumentMixin;
  }

  interface PropertyDocumentMixin {

    /**
     * Generated AMF json/ld model form the API spec.
     * The element assumes the object of the first array item to be a
     * type of `"http://raml.org/vocabularies/document#Document`
     * on AMF vocabulary.
     *
     * It is only usefult for the element to resolve references.
     */
    amfModel: object|any[]|null;

    /**
     * A property shape definition of AMF.
     */
    shape: object|null;

    /**
     * Computes value of shape's http://raml.org/vocabularies/shapes#range
     */
    range: object|null;

    /**
     * Computes type from a `http://raml.org/vocabularies/shapes#range` object
     *
     * @param range AMF property range object
     * @returns Data type of the property.
     */
    _computeRangeDataType(range: object|null): String|null;

    /**
     * Computes value for `range` property.
     *
     * @param shape Current shape object.
     * @returns Range object
     */
    _computeRange(shape: object|null): object|null;

    /**
     * Checks if property item has a type.
     *
     * @param model Model item.
     * @param type A type to lookup
     */
    _hasType(model: object|null, type: String|null): Boolean|null;

    /**
     * Gets a signle scalar value from a model.
     *
     * @param model Amf model to extract the value from.
     * @param key Model key to search for the value
     * @returns Value for key
     */
    _getValue(model: object|null, key: String|null): any|null;

    /**
     * Gets a list of scalar values from a model.
     *
     * @param model Amf model to extract the value from.
     * @param key Model key to search for the value
     * @returns Value for key
     */
    _getValues(model: object|null, key: String|null): Array<any|null>|null;

    /**
     * Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`
     * from the shape model
     *
     * @param item Range object
     * @returns Shape object
     */
    _computeProperties(item: object|null): object|null;

    /**
     * Computes properties to render Array items documentation.
     *
     * @param range Range object of current shape.
     * @returns List of Array items.
     */
    _computeArrayProperties(range: object|null): Array<object|null>|null|undefined;

    /**
     * Computes value for `isUnion` property.
     * Union type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsUnion(range: object|null): Boolean|null;

    /**
     * Computes value for `isObject` property.
     * Object type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsObject(range: object|null): Boolean|null;

    /**
     * Computes value for `isArray` property.
     * Array type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsArray(range: object|null): Boolean|null;

    /**
     * Computes list of union type labels to render.
     */
    _computeUnionTypes(isUnion: Boolean|null, range: object|null): Array<object|null>|null;

    /**
     * Computes union type label when the union is in Array.
     *
     * @param items Array items property
     * @returns Label for the union type.
     */
    _computeArrayUnionLabel(items: any[]|null): String|null|undefined;

    /**
     * Computes name label for the shape.
     *
     * @param range Range object of current shape.
     * @param shape The shape of the property.
     * @returns Display name of the property
     */
    _computeDisplayName(range: object|null, shape: object|null): String|null;
  }
}
