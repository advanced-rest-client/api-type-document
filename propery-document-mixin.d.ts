/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   propery-document-mixin.html
 */

/// <reference path="../polymer/types/lib/utils/mixin.d.ts" />

declare namespace ArcBehaviors {


  /**
   * A mixin that contains common function for `property-*-document` elements.
   */
  function PropertyDocumentMixin<T extends new (...args: any[]) => {}>(base: T): T & PropertyDocumentMixinConstructor;

  interface PropertyDocumentMixinConstructor {
    new(...args: any[]): PropertyDocumentMixin;
  }

  interface PropertyDocumentMixin {

    /**
     * Generated AMF json/ld model form the API spec.
     * The element assumes the object of the first array item to be a
     * type of `"http://raml.org/vocabularies/document#Document`
     * on AMF vocabulary.
     *
     * It is only usefult for the element to resolve references.
     */
    amfModel: object|any[]|null;

    /**
     * A property shape definition of AMF.
     */
    shape: object|null;

    /**
     * Computes value of shape's http://raml.org/vocabularies/shapes#range
     */
    range: object|null;

    /**
     * Computes type from a `http://raml.org/vocabularies/shapes#range` object
     *
     * @param range AMF property range object
     * @returns Data type of the property.
     */
    _computeRangeDataType(range: object|null): String|null;

    /**
     * Checks if property item has a type.
     *
     * @param model Model item.
     * @param type A type to lookup
     */
    _hasType(model: object|null, type: String|null): Boolean|null;

    /**
     * Gets a signle scalar value from a model.
     *
     * @param model Amf model to extract the value from.
     * @param key Model key to search for the value
     * @returns Value for key
     */
    _getValue(model: object|null, key: String|null): any|null;

    /**
     * Gets a list of scalar values from a model.
     *
     * @param model Amf model to extract the value from.
     * @param key Model key to search for the value
     * @returns Value for key
     */
    _getValues(model: object|null, key: String|null): Array<any|null>|null;
  }
}
