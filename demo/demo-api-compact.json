{
  "@context": {
    "raml-http": "http://a.ml/vocabularies/http#",
    "shacl": "http://www.w3.org/ns/shacl#",
    "raml-shapes": "http://a.ml/vocabularies/shapes#",
    "security": "http://a.ml/vocabularies/security#",
    "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
    "data": "http://a.ml/vocabularies/data#",
    "doc": "http://a.ml/vocabularies/document#",
    "schema-org": "http://schema.org/",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "hydra": "http://www.w3.org/ns/hydra/core#"
  },
  "@id": "amf://id",
  "@type": [
    "doc:Document",
    "doc:Fragment",
    "doc:Module",
    "doc:Unit"
  ],
  "doc:declares": [
    {
      "@id": "amf://id#1",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "MarkAnnotation",
      "raml-shapes:schema": {
        "@id": "amf://id#2",
        "@type": [
          "raml-shapes:NilShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "shacl:name": "MarkAnnotation"
      }
    },
    {
      "@id": "amf://id#3",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "deprecated",
      "raml-shapes:schema": {
        "@id": "amf://id#4",
        "@type": [
          "raml-shapes:ScalarShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:datatype": {
          "@id": "xsd:string"
        },
        "shacl:name": "deprecated"
      }
    },
    {
      "@id": "amf://id#5",
      "@type": [
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#Property",
        "doc:DomainProperty",
        "doc:DomainElement"
      ],
      "doc:name": "clearanceLevel",
      "raml-shapes:schema": {
        "@id": "amf://id#6",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "schema",
        "shacl:property": [
          {
            "@id": "amf://id#7",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#8",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#8/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#9",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "low"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#10",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "medium"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#11",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "high"
                  }
                }
              },
              "shacl:name": "level"
            },
            "shacl:minCount": 1,
            "shacl:name": "level",
            "shacl:path": {
              "@id": "data:level"
            }
          },
          {
            "@id": "amf://id#12",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#13",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "signature",
              "shacl:pattern": "^\\d{3}-\\w{12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "signature",
            "shacl:path": {
              "@id": "data:signature"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#14",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A response that is errored",
      "shacl:closed": false,
      "shacl:name": "ErrorResource",
      "shacl:property": [
        {
          "@id": "amf://id#15",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#16",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#18",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#19",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Indicate that the response is errored.",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#17",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "shacl:defaultValueStr": "true",
            "shacl:name": "error"
          },
          "shacl:minCount": 1,
          "shacl:name": "error",
          "shacl:path": {
            "@id": "data:error"
          }
        },
        {
          "@id": "amf://id#20",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#21",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#22",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#23",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "<<example>>"
                }
              },
              "shacl:raw": "<<example>>"
            },
            "schema-org:description": "The error message associated with the error.",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "message"
          },
          "shacl:minCount": 1,
          "shacl:name": "message",
          "shacl:path": {
            "@id": "data:message"
          }
        }
      ]
    },
    {
      "@id": "amf://id#26",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Notification",
      "shacl:property": [
        {
          "@id": "amf://id#27",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#28",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#29",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "items"
            },
            "schema-org:description": "Integer array item type",
            "schema-org:name": "Scalar array (integer)",
            "shacl:name": "scalarArray"
          },
          "shacl:minCount": 1,
          "shacl:name": "scalarArray",
          "shacl:path": {
            "@id": "data:scalarArray"
          }
        },
        {
          "@id": "amf://id#30",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#31",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#32",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              }
            }
          },
          "shacl:minCount": 0,
          "shacl:name": "otherScalar",
          "shacl:path": {
            "@id": "data:otherScalar"
          }
        }
      ]
    },
    {
      "@id": "amf://id#34",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#35",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#36",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:favouriteNumber": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_13",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "10"
            }
          },
          "data:favouriteTime": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_14",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "10:29:52"
            }
          },
          "data:gender": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
            }
          },
          "data:image": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:nillable": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_15",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:nil",
              "@value": "null"
            }
          },
          "data:tagline": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#37",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#38",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's favourite time of day",
            "schema-org:name": "Some example",
            "shacl:datatype": {
              "@id": "xsd:time"
            },
            "shacl:name": "favouriteTime"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteTime",
          "shacl:path": {
            "@id": "data:favouriteTime"
          }
        },
        {
          "@id": "amf://id#39",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#40",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#41",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#42",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "shacl:raw": "25"
            },
            "raml-shapes:multipleOf": 5,
            "schema-org:name": "Favourite number",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:maxInclusive": 9999,
            "shacl:minInclusive": 0,
            "shacl:name": "favouriteNumber"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteNumber",
          "shacl:path": {
            "@id": "data:favouriteNumber"
          }
        },
        {
          "@id": "amf://id#43",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#44",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "Newsletter consent",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#45",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "shacl:defaultValueStr": "false",
            "shacl:name": "newsletter"
          },
          "shacl:minCount": 0,
          "shacl:name": "newsletter",
          "shacl:path": {
            "@id": "data:newsletter"
          }
        },
        {
          "@id": "amf://id#46",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#47",
            "@type": [
              "raml-shapes:FileShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:fileType": [
              "image/png",
              "image/jpeg",
              "image/jpg",
              "image/gif"
            ],
            "shacl:maxLength": 1000,
            "shacl:minLength": 10
          },
          "shacl:minCount": 0,
          "shacl:name": "fietype",
          "shacl:path": {
            "@id": "data:fietype"
          }
        },
        {
          "@id": "amf://id#48",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#49",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#50",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#51",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "schema-org:name": "Tagline",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#52",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#53",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#54",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#55",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "schema-org:name": "Person name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#56",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#57",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#58",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#59",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "raml-shapes:dateTimeOnly",
                  "@value": "2018-04-09T19:10:15"
                }
              },
              "shacl:raw": "2018-04-09T19:10:15"
            },
            "shacl:datatype": {
              "@id": "raml-shapes:dateTimeOnly"
            },
            "shacl:name": "created"
          },
          "shacl:minCount": 0,
          "shacl:name": "created",
          "shacl:path": {
            "@id": "data:created"
          }
        },
        {
          "@id": "amf://id#60",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#61",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "schema-org:name": "Profile URL",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#62",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#63",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
            "schema-org:name": "ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:maxLength": 32,
            "shacl:minLength": 32,
            "shacl:name": "id",
            "shacl:pattern": "^[A-Za-z0-9]*$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#64",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#65",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "schema-org:name": "Language",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#66",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#67",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Very unpractical property to have in a data store.\n",
            "schema-org:name": "Age",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 0,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        },
        {
          "@id": "amf://id#68",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#69",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#70",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              {
                "@id": "amf://id#71",
                "@type": [
                  "raml-shapes:NilShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ]
              }
            ],
            "shacl:name": "amf_inline_type_1"
          },
          "shacl:minCount": 1,
          "shacl:name": "nillable",
          "shacl:path": {
            "@id": "data:nillable"
          }
        },
        {
          "@id": "amf://id#72",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#73",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "schema-org:name": "Person birthday",
            "shacl:datatype": {
              "@id": "xsd:date"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#74",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#75",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#76",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#77",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#78",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#79",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "schema-org:name": "Url",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#80",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#81",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#88",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#89",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": [
              {
                "@id": "amf://id#93",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#94",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "schema-org:name": "Women",
                "shacl:raw": "female"
              },
              {
                "@id": "amf://id#95",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#96",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "schema-org:name": "Man",
                "shacl:raw": "male"
              },
              {
                "@id": "amf://id#97",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#98",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                },
                "schema-org:name": "Elmo",
                "shacl:raw": "other"
              }
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "schema-org:name": "Gender",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#89/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "male"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#91",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "female"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#92",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "other"
                }
              }
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#103",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#104",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#105",
          "@type": "data:Object",
          "data:processVar1": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/types/ProcessVariableList/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "value1"
            }
          },
          "data:processVar2": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/types/ProcessVariableList/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "value2"
            }
          }
        },
        "shacl:raw": "{\n  \"processVar1\": \"value1\",\n  \"processVar2\": \"value2\"\n}\n"
      },
      "shacl:closed": true,
      "shacl:name": "ProcessVariableList",
      "shacl:property": {
        "@id": "amf://id#106",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:patternName": "^.*$",
        "raml-shapes:range": {
          "@id": "amf://id#107",
          "@type": [
            "raml-shapes:AnyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "shacl:name": "//"
        },
        "shacl:minCount": 0,
        "shacl:name": "//",
        "shacl:path": {
          "@id": "data:%2F%2F"
        }
      }
    },
    {
      "@id": "amf://id#108",
      "@type": [
        "raml-shapes:UnionShape",
        "shacl:Shape",
        "raml-shapes:Shape"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "amf://id#109",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "A response that is errored",
          "shacl:closed": false,
          "shacl:name": "Unionable",
          "shacl:property": [
            {
              "@id": "amf://id#15",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#16",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#18",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#19",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "true"
                    }
                  },
                  "shacl:raw": "true"
                },
                "schema-org:description": "Indicate that the response is errored.",
                "shacl:datatype": {
                  "@id": "xsd:boolean"
                },
                "shacl:defaultValue": {
                  "@id": "amf://id#17",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "shacl:defaultValueStr": "true",
                "shacl:name": "error"
              },
              "shacl:minCount": 1,
              "shacl:name": "error",
              "shacl:path": {
                "@id": "data:error"
              }
            },
            {
              "@id": "amf://id#20",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#21",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#22",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#23",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<<example>>"
                    }
                  },
                  "shacl:raw": "<<example>>"
                },
                "schema-org:description": "The error message associated with the error.",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "message"
              },
              "shacl:minCount": 1,
              "shacl:name": "message",
              "shacl:path": {
                "@id": "data:message"
              }
            }
          ]
        },
        {
          "@id": "amf://id#110",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "A single product representing an item in the store.",
          "schema-org:name": "A product resource",
          "shacl:closed": false,
          "shacl:name": "Unionable",
          "shacl:property": [
            {
              "@id": "amf://id#48",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#49",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "schema-org:name": "Etag",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            },
            {
              "@id": "amf://id#112",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#113",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#114",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#115",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "042100005264"
                    }
                  },
                  "shacl:raw": "042100005264"
                },
                "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                "schema-org:name": "UPC",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "upc",
                "shacl:pattern": "^[0-9]{12,12}$"
              },
              "shacl:minCount": 1,
              "shacl:name": "upc",
              "shacl:path": {
                "@id": "data:upc"
              }
            },
            {
              "@id": "amf://id#116",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#117",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#118",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#119",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Acme product - mentol flavor, 500 ml."
                    }
                  },
                  "shacl:raw": "Acme product - mentol flavor, 500 ml."
                },
                "schema-org:description": "Product name",
                "schema-org:name": "Name",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "name"
              },
              "shacl:minCount": 1,
              "shacl:name": "name",
              "shacl:path": {
                "@id": "data:name"
              }
            },
            {
              "@id": "amf://id#120",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#121",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                "schema-org:name": "Product ID",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "id",
                "shacl:pattern": "^[0-9a-zA-Z-]+$"
              },
              "shacl:minCount": 1,
              "shacl:name": "id",
              "shacl:path": {
                "@id": "data:id"
              }
            },
            {
              "@id": "amf://id#122",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#123",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#124",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#125",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ml"
                    }
                  },
                  "shacl:raw": "ml"
                },
                "schema-org:description": "The unit of measuremet for the quantity property.",
                "schema-org:name": "Unit",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "unit"
              },
              "shacl:minCount": 1,
              "shacl:name": "unit",
              "shacl:path": {
                "@id": "data:unit"
              }
            },
            {
              "@id": "amf://id#126",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#127",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#128",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#129",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "true"
                    }
                  },
                  "shacl:raw": "true"
                },
                "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                "schema-org:name": "Available",
                "shacl:datatype": {
                  "@id": "xsd:boolean"
                },
                "shacl:name": "available"
              },
              "shacl:minCount": 1,
              "shacl:name": "available",
              "shacl:path": {
                "@id": "data:available"
              }
            },
            {
              "@id": "amf://id#130",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#131",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#132",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#133",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "500"
                    }
                  },
                  "shacl:raw": "500"
                },
                "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                "schema-org:name": "Quantity",
                "shacl:datatype": {
                  "@id": "raml-shapes:number"
                },
                "shacl:name": "quantity"
              },
              "shacl:minCount": 1,
              "shacl:name": "quantity",
              "shacl:path": {
                "@id": "data:quantity"
              }
            }
          ]
        }
      ],
      "shacl:name": "Unionable"
    },
    {
      "@id": "amf://id#135",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "ComplexRecursive",
      "shacl:property": [
        {
          "@id": "amf://id#136",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#137",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:closed": false,
            "shacl:name": "iteration1",
            "shacl:property": [
              {
                "@id": "amf://id#138",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#139",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "raml-shapes:items": {
                    "@id": "amf://id#75",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#76",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#77",
                        "@type": "data:Object",
                        "data:thumb": {
                          "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                          }
                        },
                        "data:url": {
                          "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "https://domain.com/profile/pawel.psztyc/image"
                          }
                        }
                      },
                      "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
                    },
                    "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
                    "shacl:closed": false,
                    "shacl:name": "image",
                    "shacl:property": [
                      {
                        "@id": "amf://id#78",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#79",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                          "schema-org:name": "Url",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "url"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "url",
                        "shacl:path": {
                          "@id": "data:url"
                        }
                      },
                      {
                        "@id": "amf://id#80",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#81",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                          "schema-org:name": "Thumbnail",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "thumb"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "thumb",
                        "shacl:path": {
                          "@id": "data:thumb"
                        }
                      }
                    ]
                  },
                  "shacl:name": "images"
                },
                "shacl:minCount": 1,
                "shacl:name": "images",
                "shacl:path": {
                  "@id": "data:images"
                }
              },
              {
                "@id": "amf://id#140",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#141",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
                  "shacl:closed": false,
                  "shacl:name": "userImage",
                  "shacl:property": [
                    {
                      "@id": "amf://id#142",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#34",
                        "@type": [
                          "shacl:NodeShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#35",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#36",
                            "@type": "data:Object",
                            "data:birthday": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "1983-10-20"
                              }
                            },
                            "data:etag": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
                              }
                            },
                            "data:favouriteNumber": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_13",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:integer",
                                "@value": "10"
                              }
                            },
                            "data:favouriteTime": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_14",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "10:29:52"
                              }
                            },
                            "data:gender": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "male"
                              }
                            },
                            "data:id": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
                              }
                            },
                            "data:image": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
                              "@type": "data:Object",
                              "data:thumb": {
                                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                                }
                              },
                              "data:url": {
                                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:string",
                                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                                }
                              }
                            },
                            "data:language": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "en_GB"
                              }
                            },
                            "data:name": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Pawel Psztyc"
                              }
                            },
                            "data:nillable": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_15",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:nil",
                                "@value": "null"
                              }
                            },
                            "data:tagline": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "Some text about me."
                              }
                            },
                            "data:url": {
                              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
                              "@type": "data:Scalar",
                              "data:value": {
                                "@type": "xsd:string",
                                "@value": "https://domain.com/profile/pawel.psztyc"
                              }
                            }
                          },
                          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
                        },
                        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
                        "schema-org:name": "A person resource",
                        "shacl:closed": false,
                        "shacl:name": "AppPerson",
                        "shacl:property": [
                          {
                            "@id": "amf://id#37",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#38",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "The person's favourite time of day",
                              "schema-org:name": "Some example",
                              "shacl:datatype": {
                                "@id": "xsd:time"
                              },
                              "shacl:name": "favouriteTime"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "favouriteTime",
                            "shacl:path": {
                              "@id": "data:favouriteTime"
                            }
                          },
                          {
                            "@id": "amf://id#39",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#40",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "doc:examples": {
                                "@id": "amf://id#41",
                                "@type": [
                                  "doc:Example",
                                  "doc:DomainElement"
                                ],
                                "doc:strict": true,
                                "doc:structuredValue": {
                                  "@id": "amf://id#42",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:integer",
                                    "@value": "25"
                                  }
                                },
                                "shacl:raw": "25"
                              },
                              "raml-shapes:multipleOf": 5,
                              "schema-org:name": "Favourite number",
                              "shacl:datatype": {
                                "@id": "raml-shapes:number"
                              },
                              "shacl:maxInclusive": 9999,
                              "shacl:minInclusive": 0,
                              "shacl:name": "favouriteNumber"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "favouriteNumber",
                            "shacl:path": {
                              "@id": "data:favouriteNumber"
                            }
                          },
                          {
                            "@id": "amf://id#43",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#44",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:name": "Newsletter consent",
                              "shacl:datatype": {
                                "@id": "xsd:boolean"
                              },
                              "shacl:defaultValue": {
                                "@id": "amf://id#45",
                                "@type": "data:Scalar",
                                "data:value": {
                                  "@type": "xsd:boolean",
                                  "@value": "false"
                                }
                              },
                              "shacl:defaultValueStr": "false",
                              "shacl:name": "newsletter"
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "newsletter",
                            "shacl:path": {
                              "@id": "data:newsletter"
                            }
                          },
                          {
                            "@id": "amf://id#46",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#47",
                              "@type": [
                                "raml-shapes:FileShape",
                                "shacl:Shape",
                                "raml-shapes:Shape"
                              ],
                              "raml-shapes:fileType": [
                                "image/png",
                                "image/jpeg",
                                "image/jpg",
                                "image/gif"
                              ],
                              "shacl:maxLength": 1000,
                              "shacl:minLength": 10
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "fietype",
                            "shacl:path": {
                              "@id": "data:fietype"
                            }
                          },
                          {
                            "@id": "amf://id#48",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#49",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                              "schema-org:name": "Etag",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "etag"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "etag",
                            "shacl:path": {
                              "@id": "data:etag"
                            }
                          },
                          {
                            "@id": "amf://id#50",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#51",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "The brief description (tagline) of this person.",
                              "schema-org:name": "Tagline",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "tagline"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "tagline",
                            "shacl:path": {
                              "@id": "data:tagline"
                            }
                          },
                          {
                            "@id": "amf://id#52",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#53",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "doc:examples": {
                                "@id": "amf://id#54",
                                "@type": [
                                  "doc:Example",
                                  "doc:DomainElement"
                                ],
                                "doc:strict": true,
                                "doc:structuredValue": {
                                  "@id": "amf://id#55",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "John Smith"
                                  }
                                },
                                "shacl:raw": "John Smith"
                              },
                              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
                              "schema-org:name": "Person name",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "name",
                              "shacl:pattern": "^[0-9a-zA-Z ]+$"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "name",
                            "shacl:path": {
                              "@id": "data:name"
                            }
                          },
                          {
                            "@id": "amf://id#56",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#57",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "doc:examples": {
                                "@id": "amf://id#58",
                                "@type": [
                                  "doc:Example",
                                  "doc:DomainElement"
                                ],
                                "doc:strict": true,
                                "doc:structuredValue": {
                                  "@id": "amf://id#59",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "raml-shapes:dateTimeOnly",
                                    "@value": "2018-04-09T19:10:15"
                                  }
                                },
                                "shacl:raw": "2018-04-09T19:10:15"
                              },
                              "shacl:datatype": {
                                "@id": "raml-shapes:dateTimeOnly"
                              },
                              "shacl:name": "created"
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "created",
                            "shacl:path": {
                              "@id": "data:created"
                            }
                          },
                          {
                            "@id": "amf://id#60",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#61",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "The URL of this person's profile.",
                              "schema-org:name": "Profile URL",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "url"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "url",
                            "shacl:path": {
                              "@id": "data:url"
                            }
                          },
                          {
                            "@id": "amf://id#62",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#63",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
                              "schema-org:name": "ID",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:maxLength": 32,
                              "shacl:minLength": 32,
                              "shacl:name": "id",
                              "shacl:pattern": "^[A-Za-z0-9]*$"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "id",
                            "shacl:path": {
                              "@id": "data:id"
                            }
                          },
                          {
                            "@id": "amf://id#64",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#65",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "The user's preferred language for rendering.",
                              "schema-org:name": "Language",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:name": "language"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "language",
                            "shacl:path": {
                              "@id": "data:language"
                            }
                          },
                          {
                            "@id": "amf://id#66",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#67",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "Very unpractical property to have in a data store.\n",
                              "schema-org:name": "Age",
                              "shacl:datatype": {
                                "@id": "xsd:integer"
                              },
                              "shacl:name": "age"
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "age",
                            "shacl:path": {
                              "@id": "data:age"
                            }
                          },
                          {
                            "@id": "amf://id#68",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#69",
                              "@type": [
                                "raml-shapes:UnionShape",
                                "shacl:Shape",
                                "raml-shapes:Shape"
                              ],
                              "raml-shapes:anyOf": [
                                {
                                  "@id": "amf://id#70",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  }
                                },
                                {
                                  "@id": "amf://id#71",
                                  "@type": [
                                    "raml-shapes:NilShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape"
                                  ]
                                }
                              ],
                              "shacl:name": "amf_inline_type_1"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "nillable",
                            "shacl:path": {
                              "@id": "data:nillable"
                            }
                          },
                          {
                            "@id": "amf://id#72",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#73",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
                              "schema-org:name": "Person birthday",
                              "shacl:datatype": {
                                "@id": "xsd:date"
                              },
                              "shacl:name": "birthday"
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "birthday",
                            "shacl:path": {
                              "@id": "data:birthday"
                            }
                          },
                          {
                            "@id": "amf://id#74",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#75",
                              "@type": [
                                "shacl:NodeShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "doc:examples": {
                                "@id": "amf://id#76",
                                "@type": [
                                  "doc:Example",
                                  "doc:DomainElement"
                                ],
                                "doc:strict": true,
                                "doc:structuredValue": {
                                  "@id": "amf://id#77",
                                  "@type": "data:Object",
                                  "data:thumb": {
                                    "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                                    }
                                  },
                                  "data:url": {
                                    "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": "https://domain.com/profile/pawel.psztyc/image"
                                    }
                                  }
                                },
                                "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
                              },
                              "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
                              "shacl:closed": false,
                              "shacl:name": "image",
                              "shacl:property": [
                                {
                                  "@id": "amf://id#78",
                                  "@type": [
                                    "shacl:PropertyShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape"
                                  ],
                                  "raml-shapes:range": {
                                    "@id": "amf://id#79",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                                    "schema-org:name": "Url",
                                    "shacl:datatype": {
                                      "@id": "xsd:string"
                                    },
                                    "shacl:name": "url"
                                  },
                                  "shacl:minCount": 1,
                                  "shacl:name": "url",
                                  "shacl:path": {
                                    "@id": "data:url"
                                  }
                                },
                                {
                                  "@id": "amf://id#80",
                                  "@type": [
                                    "shacl:PropertyShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape"
                                  ],
                                  "raml-shapes:range": {
                                    "@id": "amf://id#81",
                                    "@type": [
                                      "raml-shapes:ScalarShape",
                                      "shacl:Shape",
                                      "raml-shapes:Shape",
                                      "doc:DomainElement"
                                    ],
                                    "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                                    "schema-org:name": "Thumbnail",
                                    "shacl:datatype": {
                                      "@id": "xsd:string"
                                    },
                                    "shacl:name": "thumb"
                                  },
                                  "shacl:minCount": 1,
                                  "shacl:name": "thumb",
                                  "shacl:path": {
                                    "@id": "data:thumb"
                                  }
                                }
                              ]
                            },
                            "shacl:minCount": 1,
                            "shacl:name": "image",
                            "shacl:path": {
                              "@id": "data:image"
                            }
                          },
                          {
                            "@id": "amf://id#88",
                            "@type": [
                              "shacl:PropertyShape",
                              "shacl:Shape",
                              "raml-shapes:Shape"
                            ],
                            "raml-shapes:range": {
                              "@id": "amf://id#89",
                              "@type": [
                                "raml-shapes:ScalarShape",
                                "shacl:Shape",
                                "raml-shapes:Shape",
                                "doc:DomainElement"
                              ],
                              "doc:examples": [
                                {
                                  "@id": "amf://id#93",
                                  "@type": [
                                    "doc:Example",
                                    "doc:DomainElement"
                                  ],
                                  "doc:strict": true,
                                  "doc:structuredValue": {
                                    "@id": "amf://id#94",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": "female"
                                    }
                                  },
                                  "schema-org:name": "Women",
                                  "shacl:raw": "female"
                                },
                                {
                                  "@id": "amf://id#95",
                                  "@type": [
                                    "doc:Example",
                                    "doc:DomainElement"
                                  ],
                                  "doc:strict": true,
                                  "doc:structuredValue": {
                                    "@id": "amf://id#96",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": "male"
                                    }
                                  },
                                  "schema-org:name": "Man",
                                  "shacl:raw": "male"
                                },
                                {
                                  "@id": "amf://id#97",
                                  "@type": [
                                    "doc:Example",
                                    "doc:DomainElement"
                                  ],
                                  "doc:strict": true,
                                  "doc:structuredValue": {
                                    "@id": "amf://id#98",
                                    "@type": "data:Scalar",
                                    "data:value": {
                                      "@type": "xsd:string",
                                      "@value": "other"
                                    }
                                  },
                                  "schema-org:name": "Elmo",
                                  "shacl:raw": "other"
                                }
                              ],
                              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
                              "schema-org:name": "Gender",
                              "shacl:datatype": {
                                "@id": "xsd:string"
                              },
                              "shacl:in": {
                                "@id": "amf://id#89/list",
                                "@type": "rdfs:Seq",
                                "rdfs:_1": {
                                  "@id": "amf://id#90",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "male"
                                  }
                                },
                                "rdfs:_2": {
                                  "@id": "amf://id#91",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "female"
                                  }
                                },
                                "rdfs:_3": {
                                  "@id": "amf://id#92",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "other"
                                  }
                                }
                              },
                              "shacl:name": "gender?"
                            },
                            "shacl:minCount": 0,
                            "shacl:name": "gender",
                            "shacl:path": {
                              "@id": "data:gender"
                            }
                          }
                        ]
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "user",
                      "shacl:path": {
                        "@id": "data:user"
                      }
                    },
                    {
                      "@id": "amf://id#80",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#81",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                        "schema-org:name": "Thumbnail",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "thumb"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "thumb",
                      "shacl:path": {
                        "@id": "data:thumb"
                      }
                    },
                    {
                      "@id": "amf://id#78",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#79",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                        "schema-org:name": "Url",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "url"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "url",
                      "shacl:path": {
                        "@id": "data:url"
                      }
                    },
                    {
                      "@id": "amf://id#143",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#144",
                        "@type": [
                          "raml-shapes:UnionShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:anyOf": [
                          {
                            "@id": "amf://id#145",
                            "@type": [
                              "raml-shapes:ScalarShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "shacl:datatype": {
                              "@id": "xsd:string"
                            }
                          },
                          {
                            "@id": "amf://id#111",
                            "@type": [
                              "shacl:NodeShape",
                              "shacl:Shape",
                              "raml-shapes:Shape",
                              "doc:DomainElement"
                            ],
                            "doc:examples": {
                              "@id": "amf://id#146",
                              "@type": [
                                "doc:Example",
                                "doc:DomainElement"
                              ],
                              "doc:strict": true,
                              "doc:structuredValue": {
                                "@id": "amf://id#147",
                                "@type": "data:Object",
                                "data:available": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:boolean",
                                    "@value": "true"
                                  }
                                },
                                "data:etag": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "W\\sd3deef3rgrgf4r"
                                  }
                                },
                                "data:id": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                                  }
                                },
                                "data:name": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "Acme Product"
                                  }
                                },
                                "data:quantity": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:integer",
                                    "@value": "200"
                                  }
                                },
                                "data:unit": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "ml"
                                  }
                                },
                                "data:upc": {
                                  "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                                  "@type": "data:Scalar",
                                  "data:value": {
                                    "@type": "xsd:string",
                                    "@value": "123456789101"
                                  }
                                }
                              },
                              "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
                            },
                            "schema-org:description": "A single product representing an item in the store.",
                            "schema-org:name": "A product resource",
                            "shacl:closed": false,
                            "shacl:name": "Product",
                            "shacl:property": [
                              {
                                "@id": "amf://id#112",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#113",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "doc:examples": {
                                    "@id": "amf://id#114",
                                    "@type": [
                                      "doc:Example",
                                      "doc:DomainElement"
                                    ],
                                    "doc:strict": true,
                                    "doc:structuredValue": {
                                      "@id": "amf://id#115",
                                      "@type": "data:Scalar",
                                      "data:value": {
                                        "@type": "xsd:string",
                                        "@value": "042100005264"
                                      }
                                    },
                                    "shacl:raw": "042100005264"
                                  },
                                  "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                                  "schema-org:name": "UPC",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:name": "upc",
                                  "shacl:pattern": "^[0-9]{12,12}$"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "upc",
                                "shacl:path": {
                                  "@id": "data:upc"
                                }
                              },
                              {
                                "@id": "amf://id#48",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#49",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                                  "schema-org:name": "Etag",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:name": "etag"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "etag",
                                "shacl:path": {
                                  "@id": "data:etag"
                                }
                              },
                              {
                                "@id": "amf://id#116",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#117",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "doc:examples": {
                                    "@id": "amf://id#118",
                                    "@type": [
                                      "doc:Example",
                                      "doc:DomainElement"
                                    ],
                                    "doc:strict": true,
                                    "doc:structuredValue": {
                                      "@id": "amf://id#119",
                                      "@type": "data:Scalar",
                                      "data:value": {
                                        "@type": "xsd:string",
                                        "@value": "Acme product - mentol flavor, 500 ml."
                                      }
                                    },
                                    "shacl:raw": "Acme product - mentol flavor, 500 ml."
                                  },
                                  "schema-org:description": "Product name",
                                  "schema-org:name": "Name",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:name": "name"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "name",
                                "shacl:path": {
                                  "@id": "data:name"
                                }
                              },
                              {
                                "@id": "amf://id#120",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#121",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                                  "schema-org:name": "Product ID",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:name": "id",
                                  "shacl:pattern": "^[0-9a-zA-Z-]+$"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "id",
                                "shacl:path": {
                                  "@id": "data:id"
                                }
                              },
                              {
                                "@id": "amf://id#122",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#123",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "doc:examples": {
                                    "@id": "amf://id#124",
                                    "@type": [
                                      "doc:Example",
                                      "doc:DomainElement"
                                    ],
                                    "doc:strict": true,
                                    "doc:structuredValue": {
                                      "@id": "amf://id#125",
                                      "@type": "data:Scalar",
                                      "data:value": {
                                        "@type": "xsd:string",
                                        "@value": "ml"
                                      }
                                    },
                                    "shacl:raw": "ml"
                                  },
                                  "schema-org:description": "The unit of measuremet for the quantity property.",
                                  "schema-org:name": "Unit",
                                  "shacl:datatype": {
                                    "@id": "xsd:string"
                                  },
                                  "shacl:name": "unit"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "unit",
                                "shacl:path": {
                                  "@id": "data:unit"
                                }
                              },
                              {
                                "@id": "amf://id#126",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#127",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "doc:examples": {
                                    "@id": "amf://id#128",
                                    "@type": [
                                      "doc:Example",
                                      "doc:DomainElement"
                                    ],
                                    "doc:strict": true,
                                    "doc:structuredValue": {
                                      "@id": "amf://id#129",
                                      "@type": "data:Scalar",
                                      "data:value": {
                                        "@type": "xsd:boolean",
                                        "@value": "true"
                                      }
                                    },
                                    "shacl:raw": "true"
                                  },
                                  "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                                  "schema-org:name": "Available",
                                  "shacl:datatype": {
                                    "@id": "xsd:boolean"
                                  },
                                  "shacl:name": "available"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "available",
                                "shacl:path": {
                                  "@id": "data:available"
                                }
                              },
                              {
                                "@id": "amf://id#130",
                                "@type": [
                                  "shacl:PropertyShape",
                                  "shacl:Shape",
                                  "raml-shapes:Shape"
                                ],
                                "raml-shapes:range": {
                                  "@id": "amf://id#131",
                                  "@type": [
                                    "raml-shapes:ScalarShape",
                                    "shacl:Shape",
                                    "raml-shapes:Shape",
                                    "doc:DomainElement"
                                  ],
                                  "doc:examples": {
                                    "@id": "amf://id#132",
                                    "@type": [
                                      "doc:Example",
                                      "doc:DomainElement"
                                    ],
                                    "doc:strict": true,
                                    "doc:structuredValue": {
                                      "@id": "amf://id#133",
                                      "@type": "data:Scalar",
                                      "data:value": {
                                        "@type": "xsd:integer",
                                        "@value": "500"
                                      }
                                    },
                                    "shacl:raw": "500"
                                  },
                                  "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                                  "schema-org:name": "Quantity",
                                  "shacl:datatype": {
                                    "@id": "raml-shapes:number"
                                  },
                                  "shacl:name": "quantity"
                                },
                                "shacl:minCount": 1,
                                "shacl:name": "quantity",
                                "shacl:path": {
                                  "@id": "data:quantity"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "options",
                      "shacl:path": {
                        "@id": "data:options"
                      }
                    }
                  ]
                },
                "shacl:minCount": 1,
                "shacl:name": "userImage",
                "shacl:path": {
                  "@id": "data:userImage"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "iteration1",
          "shacl:path": {
            "@id": "data:iteration1"
          }
        },
        {
          "@id": "amf://id#158",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#159",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A single product representing an item in the store.",
            "schema-org:name": "A product resource",
            "shacl:closed": false,
            "shacl:name": "ieration2",
            "shacl:property": [
              {
                "@id": "amf://id#48",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#49",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                  "schema-org:name": "Etag",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "etag"
                },
                "shacl:minCount": 1,
                "shacl:name": "etag",
                "shacl:path": {
                  "@id": "data:etag"
                }
              },
              {
                "@id": "amf://id#112",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#113",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#114",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#115",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "042100005264"
                      }
                    },
                    "shacl:raw": "042100005264"
                  },
                  "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                  "schema-org:name": "UPC",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "upc",
                  "shacl:pattern": "^[0-9]{12,12}$"
                },
                "shacl:minCount": 1,
                "shacl:name": "upc",
                "shacl:path": {
                  "@id": "data:upc"
                }
              },
              {
                "@id": "amf://id#116",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#117",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#118",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#119",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Acme product - mentol flavor, 500 ml."
                      }
                    },
                    "shacl:raw": "Acme product - mentol flavor, 500 ml."
                  },
                  "schema-org:description": "Product name",
                  "schema-org:name": "Name",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "name"
                },
                "shacl:minCount": 1,
                "shacl:name": "name",
                "shacl:path": {
                  "@id": "data:name"
                }
              },
              {
                "@id": "amf://id#120",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#121",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                  "schema-org:name": "Product ID",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "id",
                  "shacl:pattern": "^[0-9a-zA-Z-]+$"
                },
                "shacl:minCount": 1,
                "shacl:name": "id",
                "shacl:path": {
                  "@id": "data:id"
                }
              },
              {
                "@id": "amf://id#160",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#161",
                  "@type": [
                    "raml-shapes:ArrayShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "raml-shapes:items": {
                    "@id": "amf://id#75",
                    "@type": [
                      "shacl:NodeShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#76",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#77",
                        "@type": "data:Object",
                        "data:thumb": {
                          "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                          }
                        },
                        "data:url": {
                          "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "https://domain.com/profile/pawel.psztyc/image"
                          }
                        }
                      },
                      "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
                    },
                    "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
                    "shacl:closed": false,
                    "shacl:name": "image",
                    "shacl:property": [
                      {
                        "@id": "amf://id#78",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#79",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                          "schema-org:name": "Url",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "url"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "url",
                        "shacl:path": {
                          "@id": "data:url"
                        }
                      },
                      {
                        "@id": "amf://id#80",
                        "@type": [
                          "shacl:PropertyShape",
                          "shacl:Shape",
                          "raml-shapes:Shape"
                        ],
                        "raml-shapes:range": {
                          "@id": "amf://id#81",
                          "@type": [
                            "raml-shapes:ScalarShape",
                            "shacl:Shape",
                            "raml-shapes:Shape",
                            "doc:DomainElement"
                          ],
                          "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                          "schema-org:name": "Thumbnail",
                          "shacl:datatype": {
                            "@id": "xsd:string"
                          },
                          "shacl:name": "thumb"
                        },
                        "shacl:minCount": 1,
                        "shacl:name": "thumb",
                        "shacl:path": {
                          "@id": "data:thumb"
                        }
                      }
                    ]
                  }
                },
                "shacl:minCount": 1,
                "shacl:name": "images",
                "shacl:path": {
                  "@id": "data:images"
                }
              },
              {
                "@id": "amf://id#122",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#123",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#124",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#125",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "ml"
                      }
                    },
                    "shacl:raw": "ml"
                  },
                  "schema-org:description": "The unit of measuremet for the quantity property.",
                  "schema-org:name": "Unit",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "unit"
                },
                "shacl:minCount": 1,
                "shacl:name": "unit",
                "shacl:path": {
                  "@id": "data:unit"
                }
              },
              {
                "@id": "amf://id#126",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#127",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#128",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#129",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "shacl:raw": "true"
                  },
                  "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                  "schema-org:name": "Available",
                  "shacl:datatype": {
                    "@id": "xsd:boolean"
                  },
                  "shacl:name": "available"
                },
                "shacl:minCount": 1,
                "shacl:name": "available",
                "shacl:path": {
                  "@id": "data:available"
                }
              },
              {
                "@id": "amf://id#130",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#131",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#132",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#133",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "500"
                      }
                    },
                    "shacl:raw": "500"
                  },
                  "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                  "schema-org:name": "Quantity",
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  },
                  "shacl:name": "quantity"
                },
                "shacl:minCount": 1,
                "shacl:name": "quantity",
                "shacl:path": {
                  "@id": "data:quantity"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "ieration2",
          "shacl:path": {
            "@id": "data:ieration2"
          }
        }
      ]
    },
    {
      "@id": "amf://id#163",
      "@type": [
        "raml-shapes:ArrayShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "raml-shapes:items": {
        "@id": "amf://id#75",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#76",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#77",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
        },
        "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
        "shacl:closed": false,
        "shacl:name": "image",
        "shacl:property": [
          {
            "@id": "amf://id#78",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#79",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
              "schema-org:name": "Url",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#80",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#81",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
              "schema-org:name": "Thumbnail",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "thumb"
            },
            "shacl:minCount": 1,
            "shacl:name": "thumb",
            "shacl:path": {
              "@id": "data:thumb"
            }
          }
        ]
      },
      "schema-org:description": "Hello world\n",
      "shacl:name": "ArrayType"
    },
    {
      "@id": "amf://id#164",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "Common properties for all resources returned by the API.\n",
      "shacl:closed": false,
      "shacl:name": "Resource",
      "shacl:property": {
        "@id": "amf://id#48",
        "@type": [
          "shacl:PropertyShape",
          "shacl:Shape",
          "raml-shapes:Shape"
        ],
        "raml-shapes:range": {
          "@id": "amf://id#49",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
          "schema-org:name": "Etag",
          "shacl:datatype": {
            "@id": "xsd:string"
          },
          "shacl:name": "etag"
        },
        "shacl:minCount": 1,
        "shacl:name": "etag",
        "shacl:path": {
          "@id": "data:etag"
        }
      }
    },
    {
      "@id": "amf://id#168",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "PropertyArray",
      "shacl:property": [
        {
          "@id": "amf://id#169",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#170",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#171",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#172",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "nextPageToken"
          },
          "shacl:minCount": 1,
          "shacl:name": "nextPageToken",
          "shacl:path": {
            "@id": "data:nextPageToken"
          }
        },
        {
          "@id": "amf://id#173",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#174",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#111",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#146",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#147",
                  "@type": "data:Object",
                  "data:available": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:boolean",
                      "@value": "true"
                    }
                  },
                  "data:etag": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "W\\sd3deef3rgrgf4r"
                    }
                  },
                  "data:id": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                    }
                  },
                  "data:name": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Acme Product"
                    }
                  },
                  "data:quantity": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "200"
                    }
                  },
                  "data:unit": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ml"
                    }
                  },
                  "data:upc": {
                    "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "123456789101"
                    }
                  }
                },
                "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
              },
              "schema-org:description": "A single product representing an item in the store.",
              "schema-org:name": "A product resource",
              "shacl:closed": false,
              "shacl:name": "Product",
              "shacl:property": [
                {
                  "@id": "amf://id#112",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#113",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#114",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#115",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "042100005264"
                        }
                      },
                      "shacl:raw": "042100005264"
                    },
                    "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                    "schema-org:name": "UPC",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "upc",
                    "shacl:pattern": "^[0-9]{12,12}$"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "upc",
                  "shacl:path": {
                    "@id": "data:upc"
                  }
                },
                {
                  "@id": "amf://id#48",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#49",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                    "schema-org:name": "Etag",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "etag"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "etag",
                  "shacl:path": {
                    "@id": "data:etag"
                  }
                },
                {
                  "@id": "amf://id#116",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#117",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#118",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#119",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Acme product - mentol flavor, 500 ml."
                        }
                      },
                      "shacl:raw": "Acme product - mentol flavor, 500 ml."
                    },
                    "schema-org:description": "Product name",
                    "schema-org:name": "Name",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "name"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "name",
                  "shacl:path": {
                    "@id": "data:name"
                  }
                },
                {
                  "@id": "amf://id#120",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#121",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                    "schema-org:name": "Product ID",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "id",
                    "shacl:pattern": "^[0-9a-zA-Z-]+$"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "id",
                  "shacl:path": {
                    "@id": "data:id"
                  }
                },
                {
                  "@id": "amf://id#122",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#123",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#124",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#125",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "ml"
                        }
                      },
                      "shacl:raw": "ml"
                    },
                    "schema-org:description": "The unit of measuremet for the quantity property.",
                    "schema-org:name": "Unit",
                    "shacl:datatype": {
                      "@id": "xsd:string"
                    },
                    "shacl:name": "unit"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "unit",
                  "shacl:path": {
                    "@id": "data:unit"
                  }
                },
                {
                  "@id": "amf://id#126",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#127",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#128",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#129",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "shacl:raw": "true"
                    },
                    "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                    "schema-org:name": "Available",
                    "shacl:datatype": {
                      "@id": "xsd:boolean"
                    },
                    "shacl:name": "available"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "available",
                  "shacl:path": {
                    "@id": "data:available"
                  }
                },
                {
                  "@id": "amf://id#130",
                  "@type": [
                    "shacl:PropertyShape",
                    "shacl:Shape",
                    "raml-shapes:Shape"
                  ],
                  "raml-shapes:range": {
                    "@id": "amf://id#131",
                    "@type": [
                      "raml-shapes:ScalarShape",
                      "shacl:Shape",
                      "raml-shapes:Shape",
                      "doc:DomainElement"
                    ],
                    "doc:examples": {
                      "@id": "amf://id#132",
                      "@type": [
                        "doc:Example",
                        "doc:DomainElement"
                      ],
                      "doc:strict": true,
                      "doc:structuredValue": {
                        "@id": "amf://id#133",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:integer",
                          "@value": "500"
                        }
                      },
                      "shacl:raw": "500"
                    },
                    "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                    "schema-org:name": "Quantity",
                    "shacl:datatype": {
                      "@id": "raml-shapes:number"
                    },
                    "shacl:name": "quantity"
                  },
                  "shacl:minCount": 1,
                  "shacl:name": "quantity",
                  "shacl:path": {
                    "@id": "data:quantity"
                  }
                }
              ]
            },
            "shacl:name": "data"
          },
          "shacl:minCount": 1,
          "shacl:name": "data",
          "shacl:path": {
            "@id": "data:data"
          }
        },
        {
          "@id": "amf://id#175",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#176",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#177",
              "@type": [
                "raml-shapes:UnionShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:anyOf": [
                {
                  "@id": "amf://id#178",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  }
                },
                {
                  "@id": "amf://id#179",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "shacl:datatype": {
                    "@id": "raml-shapes:number"
                  }
                },
                {
                  "@id": "amf://id#111",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:examples": {
                    "@id": "amf://id#146",
                    "@type": [
                      "doc:Example",
                      "doc:DomainElement"
                    ],
                    "doc:strict": true,
                    "doc:structuredValue": {
                      "@id": "amf://id#147",
                      "@type": "data:Object",
                      "data:available": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "data:etag": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "W\\sd3deef3rgrgf4r"
                        }
                      },
                      "data:id": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                        }
                      },
                      "data:name": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "Acme Product"
                        }
                      },
                      "data:quantity": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:integer",
                          "@value": "200"
                        }
                      },
                      "data:unit": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "ml"
                        }
                      },
                      "data:upc": {
                        "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:string",
                          "@value": "123456789101"
                        }
                      }
                    },
                    "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
                  },
                  "schema-org:description": "A single product representing an item in the store.",
                  "schema-org:name": "A product resource",
                  "shacl:closed": false,
                  "shacl:name": "Product",
                  "shacl:property": [
                    {
                      "@id": "amf://id#112",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#113",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#114",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#115",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "042100005264"
                            }
                          },
                          "shacl:raw": "042100005264"
                        },
                        "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                        "schema-org:name": "UPC",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "upc",
                        "shacl:pattern": "^[0-9]{12,12}$"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "upc",
                      "shacl:path": {
                        "@id": "data:upc"
                      }
                    },
                    {
                      "@id": "amf://id#48",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#49",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                        "schema-org:name": "Etag",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "etag"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "etag",
                      "shacl:path": {
                        "@id": "data:etag"
                      }
                    },
                    {
                      "@id": "amf://id#116",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#117",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#118",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#119",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "Acme product - mentol flavor, 500 ml."
                            }
                          },
                          "shacl:raw": "Acme product - mentol flavor, 500 ml."
                        },
                        "schema-org:description": "Product name",
                        "schema-org:name": "Name",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "name"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "name",
                      "shacl:path": {
                        "@id": "data:name"
                      }
                    },
                    {
                      "@id": "amf://id#120",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#121",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                        "schema-org:name": "Product ID",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "id",
                        "shacl:pattern": "^[0-9a-zA-Z-]+$"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "id",
                      "shacl:path": {
                        "@id": "data:id"
                      }
                    },
                    {
                      "@id": "amf://id#122",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#123",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#124",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#125",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:string",
                              "@value": "ml"
                            }
                          },
                          "shacl:raw": "ml"
                        },
                        "schema-org:description": "The unit of measuremet for the quantity property.",
                        "schema-org:name": "Unit",
                        "shacl:datatype": {
                          "@id": "xsd:string"
                        },
                        "shacl:name": "unit"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "unit",
                      "shacl:path": {
                        "@id": "data:unit"
                      }
                    },
                    {
                      "@id": "amf://id#126",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#127",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#128",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#129",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:boolean",
                              "@value": "true"
                            }
                          },
                          "shacl:raw": "true"
                        },
                        "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                        "schema-org:name": "Available",
                        "shacl:datatype": {
                          "@id": "xsd:boolean"
                        },
                        "shacl:name": "available"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "available",
                      "shacl:path": {
                        "@id": "data:available"
                      }
                    },
                    {
                      "@id": "amf://id#130",
                      "@type": [
                        "shacl:PropertyShape",
                        "shacl:Shape",
                        "raml-shapes:Shape"
                      ],
                      "raml-shapes:range": {
                        "@id": "amf://id#131",
                        "@type": [
                          "raml-shapes:ScalarShape",
                          "shacl:Shape",
                          "raml-shapes:Shape",
                          "doc:DomainElement"
                        ],
                        "doc:examples": {
                          "@id": "amf://id#132",
                          "@type": [
                            "doc:Example",
                            "doc:DomainElement"
                          ],
                          "doc:strict": true,
                          "doc:structuredValue": {
                            "@id": "amf://id#133",
                            "@type": "data:Scalar",
                            "data:value": {
                              "@type": "xsd:integer",
                              "@value": "500"
                            }
                          },
                          "shacl:raw": "500"
                        },
                        "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                        "schema-org:name": "Quantity",
                        "shacl:datatype": {
                          "@id": "raml-shapes:number"
                        },
                        "shacl:name": "quantity"
                      },
                      "shacl:minCount": 1,
                      "shacl:name": "quantity",
                      "shacl:path": {
                        "@id": "data:quantity"
                      }
                    }
                  ]
                }
              ]
            },
            "shacl:name": "complex"
          },
          "shacl:minCount": 1,
          "shacl:name": "complex",
          "shacl:path": {
            "@id": "data:complex"
          }
        }
      ]
    },
    {
      "@id": "amf://id#180",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "PropertyUnion",
      "shacl:property": [
        {
          "@id": "amf://id#181",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#182",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#183",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#184",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#185",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "A feature to test enum values in the URI parameters.",
                "shacl:datatype": {
                  "@id": "raml-shapes:number"
                },
                "shacl:in": {
                  "@id": "amf://id#185/list",
                  "@type": "rdfs:Seq",
                  "rdfs:_1": {
                    "@id": "amf://id#186",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "1"
                    }
                  },
                  "rdfs:_2": {
                    "@id": "amf://id#187",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "2"
                    }
                  },
                  "rdfs:_3": {
                    "@id": "amf://id#188",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:integer",
                      "@value": "3"
                    }
                  }
                },
                "shacl:name": "Feature"
              },
              {
                "@id": "amf://id#14",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "A response that is errored",
                "shacl:closed": false,
                "shacl:name": "ErrorResource",
                "shacl:property": [
                  {
                    "@id": "amf://id#15",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#16",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#18",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#19",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:boolean",
                            "@value": "true"
                          }
                        },
                        "shacl:raw": "true"
                      },
                      "schema-org:description": "Indicate that the response is errored.",
                      "shacl:datatype": {
                        "@id": "xsd:boolean"
                      },
                      "shacl:defaultValue": {
                        "@id": "amf://id#17",
                        "@type": "data:Scalar",
                        "data:value": {
                          "@type": "xsd:boolean",
                          "@value": "true"
                        }
                      },
                      "shacl:defaultValueStr": "true",
                      "shacl:name": "error"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "error",
                    "shacl:path": {
                      "@id": "data:error"
                    }
                  },
                  {
                    "@id": "amf://id#20",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#21",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#22",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#23",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "<<example>>"
                          }
                        },
                        "shacl:raw": "<<example>>"
                      },
                      "schema-org:description": "The error message associated with the error.",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "message"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "message",
                    "shacl:path": {
                      "@id": "data:message"
                    }
                  }
                ]
              },
              {
                "@id": "amf://id#111",
                "@type": [
                  "shacl:NodeShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "doc:examples": {
                  "@id": "amf://id#146",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#147",
                    "@type": "data:Object",
                    "data:available": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:boolean",
                        "@value": "true"
                      }
                    },
                    "data:etag": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "W\\sd3deef3rgrgf4r"
                      }
                    },
                    "data:id": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
                      }
                    },
                    "data:name": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "Acme Product"
                      }
                    },
                    "data:quantity": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:integer",
                        "@value": "200"
                      }
                    },
                    "data:unit": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "ml"
                      }
                    },
                    "data:upc": {
                      "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
                      "@type": "data:Scalar",
                      "data:value": {
                        "@type": "xsd:string",
                        "@value": "123456789101"
                      }
                    }
                  },
                  "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
                },
                "schema-org:description": "A single product representing an item in the store.",
                "schema-org:name": "A product resource",
                "shacl:closed": false,
                "shacl:name": "Product",
                "shacl:property": [
                  {
                    "@id": "amf://id#112",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#113",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#114",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#115",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "042100005264"
                          }
                        },
                        "shacl:raw": "042100005264"
                      },
                      "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
                      "schema-org:name": "UPC",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "upc",
                      "shacl:pattern": "^[0-9]{12,12}$"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "upc",
                    "shacl:path": {
                      "@id": "data:upc"
                    }
                  },
                  {
                    "@id": "amf://id#48",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#49",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                      "schema-org:name": "Etag",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "etag"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "etag",
                    "shacl:path": {
                      "@id": "data:etag"
                    }
                  },
                  {
                    "@id": "amf://id#116",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#117",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#118",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#119",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "Acme product - mentol flavor, 500 ml."
                          }
                        },
                        "shacl:raw": "Acme product - mentol flavor, 500 ml."
                      },
                      "schema-org:description": "Product name",
                      "schema-org:name": "Name",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "name"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "name",
                    "shacl:path": {
                      "@id": "data:name"
                    }
                  },
                  {
                    "@id": "amf://id#120",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#121",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
                      "schema-org:name": "Product ID",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "id",
                      "shacl:pattern": "^[0-9a-zA-Z-]+$"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "id",
                    "shacl:path": {
                      "@id": "data:id"
                    }
                  },
                  {
                    "@id": "amf://id#122",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#123",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#124",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#125",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:string",
                            "@value": "ml"
                          }
                        },
                        "shacl:raw": "ml"
                      },
                      "schema-org:description": "The unit of measuremet for the quantity property.",
                      "schema-org:name": "Unit",
                      "shacl:datatype": {
                        "@id": "xsd:string"
                      },
                      "shacl:name": "unit"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "unit",
                    "shacl:path": {
                      "@id": "data:unit"
                    }
                  },
                  {
                    "@id": "amf://id#126",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#127",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#128",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#129",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:boolean",
                            "@value": "true"
                          }
                        },
                        "shacl:raw": "true"
                      },
                      "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
                      "schema-org:name": "Available",
                      "shacl:datatype": {
                        "@id": "xsd:boolean"
                      },
                      "shacl:name": "available"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "available",
                    "shacl:path": {
                      "@id": "data:available"
                    }
                  },
                  {
                    "@id": "amf://id#130",
                    "@type": [
                      "shacl:PropertyShape",
                      "shacl:Shape",
                      "raml-shapes:Shape"
                    ],
                    "raml-shapes:range": {
                      "@id": "amf://id#131",
                      "@type": [
                        "raml-shapes:ScalarShape",
                        "shacl:Shape",
                        "raml-shapes:Shape",
                        "doc:DomainElement"
                      ],
                      "doc:examples": {
                        "@id": "amf://id#132",
                        "@type": [
                          "doc:Example",
                          "doc:DomainElement"
                        ],
                        "doc:strict": true,
                        "doc:structuredValue": {
                          "@id": "amf://id#133",
                          "@type": "data:Scalar",
                          "data:value": {
                            "@type": "xsd:integer",
                            "@value": "500"
                          }
                        },
                        "shacl:raw": "500"
                      },
                      "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
                      "schema-org:name": "Quantity",
                      "shacl:datatype": {
                        "@id": "raml-shapes:number"
                      },
                      "shacl:name": "quantity"
                    },
                    "shacl:minCount": 1,
                    "shacl:name": "quantity",
                    "shacl:path": {
                      "@id": "data:quantity"
                    }
                  }
                ]
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "data",
          "shacl:path": {
            "@id": "data:data"
          }
        }
      ]
    },
    {
      "@id": "amf://id#111",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#146",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#147",
          "@type": "data:Object",
          "data:available": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:boolean",
              "@value": "true"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\sd3deef3rgrgf4r"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Acme Product"
            }
          },
          "data:quantity": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "200"
            }
          },
          "data:unit": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "ml"
            }
          },
          "data:upc": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "123456789101"
            }
          }
        },
        "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
      },
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#112",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#113",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#114",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#115",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "schema-org:name": "UPC",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#48",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#49",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#116",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#117",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#118",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#119",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "schema-org:name": "Name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#120",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#121",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "schema-org:name": "Product ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#122",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#123",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#124",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#125",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "schema-org:name": "Unit",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#126",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#127",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#128",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#129",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "schema-org:name": "Available",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#130",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#131",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#132",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#133",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "schema-org:name": "Quantity",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#75",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#76",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#77",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#78",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#79",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "schema-org:name": "Url",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#80",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#81",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    },
    {
      "@id": "amf://id#185",
      "@type": [
        "raml-shapes:ScalarShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "schema-org:description": "A feature to test enum values in the URI parameters.",
      "shacl:datatype": {
        "@id": "raml-shapes:number"
      },
      "shacl:in": {
        "@id": "amf://id#185/list",
        "@type": "rdfs:Seq",
        "rdfs:_1": {
          "@id": "amf://id#186",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:integer",
            "@value": "1"
          }
        },
        "rdfs:_2": {
          "@id": "amf://id#187",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:integer",
            "@value": "2"
          }
        },
        "rdfs:_3": {
          "@id": "amf://id#188",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:integer",
            "@value": "3"
          }
        }
      },
      "shacl:name": "Feature"
    },
    {
      "@id": "amf://id#190",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "EnurableType",
      "shacl:property": [
        {
          "@id": "amf://id#191",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#192",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "amf://id#1": {
              "@id": "amf://id#198",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:nil",
                "@value": ""
              },
              "doc:name": "MarkAnnotation"
            },
            "amf://id#3": {
              "@id": "amf://id#200",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "This property is deprecated.\n\nPlease, do not use it in new projects.\n"
              },
              "doc:name": "deprecated"
            },
            "amf://id#5": {
              "@id": "amf://id#202",
              "@type": "data:Object",
              "data:level": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/types/EnurableType/property/e1/scalar/e1/clearanceLevel/object_1/scalar_2",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "low"
                }
              },
              "data:signature": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/types/EnurableType/property/e1/scalar/e1/clearanceLevel/object_1/scalar_3",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "230-ghtwvfrs1itr"
                }
              },
              "doc:name": "clearanceLevel"
            },
            "doc:customDomainProperties": [
              {
                "@id": "amf://id#1"
              },
              {
                "@id": "amf://id#3"
              },
              {
                "@id": "amf://id#5"
              }
            ],
            "schema-org:description": "Example enumerable type to test the documentation\nelement.\n\nIt renders `Markdown` model.\n",
            "schema-org:name": "Enumerable 1",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#193",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "v1"
              }
            },
            "shacl:defaultValueStr": "v1",
            "shacl:in": {
              "@id": "amf://id#192/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#193",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "v1"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#194",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "v2"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#195",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "v3"
                }
              },
              "rdfs:_4": {
                "@id": "amf://id#196",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "v4"
                }
              }
            },
            "shacl:name": "e1",
            "shacl:pattern": "^v[1-4]$"
          },
          "shacl:minCount": 0,
          "shacl:name": "e1",
          "shacl:path": {
            "@id": "data:e1"
          }
        },
        {
          "@id": "amf://id#203",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#204",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#209",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#210",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "e1"
                }
              },
              "shacl:raw": "e1"
            },
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#204/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#205",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "e1"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#206",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "e2"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#207",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "e3"
                }
              },
              "rdfs:_4": {
                "@id": "amf://id#208",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "e4"
                }
              }
            },
            "shacl:name": "e2"
          },
          "shacl:minCount": 1,
          "shacl:name": "e2",
          "shacl:path": {
            "@id": "data:e2"
          }
        }
      ]
    },
    {
      "@id": "amf://id#211",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#212",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ErrorredResource/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:nil",
            "@value": ""
          }
        }
      },
      "schema-org:name": "ErrorredResource"
    },
    {
      "@id": "amf://id#213",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#214",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_7",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_7/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_7/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_10",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_10/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Not found response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_10/scalar_13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/object_3/object_4/object_5/object_6/object_10/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        },
        "data:type": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/ResourceNotFound/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "ErrorredResource"
          }
        }
      },
      "schema-org:name": "ResourceNotFound"
    },
    {
      "@id": "amf://id#215",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#216",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:404": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_7",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_7/scalar_8",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_7/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_10",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_10/scalar_11",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Unauthorized response"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_10/scalar_13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/object_3/object_4/object_5/object_6/object_10/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              }
            }
          }
        },
        "data:type": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/UnauthorizedResponse/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "ErrorredResource"
          }
        }
      },
      "schema-org:name": "UnauthorizedResponse"
    },
    {
      "@id": "amf://id#217",
      "@type": [
        "doc:ResourceType",
        "doc:AbstractDeclaration",
        "doc:DomainElement"
      ],
      "doc:dataNode": {
        "@id": "amf://id#218",
        "@type": "data:Object",
        "data:get": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3",
          "@type": "data:Object",
          "data:responses": {
            "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4",
            "@type": "data:Object",
            "data:400": {
              "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5",
              "@type": "data:Object",
              "data:body": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7",
                "@type": "data:Object",
                "data:application%2Fjson": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_8",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_8/scalar_9",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_8/scalar_10",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "ErrorResource"
                    }
                  }
                },
                "data:application%2Fxml": {
                  "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_11",
                  "@type": "data:Object",
                  "data:displayName": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_11/scalar_12",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "Invalid request"
                    }
                  },
                  "data:example": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_11/scalar_14",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
                    }
                  },
                  "data:type": {
                    "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/object_7/object_11/scalar_13",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
                    }
                  }
                }
              },
              "data:description": {
                "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/object_3/object_4/object_5/scalar_6",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "The error response when one of the parameters is invalid and can't be parsed. Nothing can be done at the time except correcting the request to send valid data."
                }
              }
            }
          }
        },
        "data:type": {
          "@id": "file://demo/demo-api/demo-api.raml#/declarations/resourceTypes/RequestErrorResponse/object_1/scalar_2",
          "@type": "data:Scalar",
          "data:value": {
            "@type": "xsd:string",
            "@value": "ErrorredResource"
          }
        }
      },
      "schema-org:name": "RequestErrorResponse"
    },
    {
      "@id": "amf://id#240",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#146",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#147",
          "@type": "data:Object",
          "data:available": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:boolean",
              "@value": "true"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\sd3deef3rgrgf4r"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Acme Product"
            }
          },
          "data:quantity": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "200"
            }
          },
          "data:unit": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "ml"
            }
          },
          "data:upc": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "123456789101"
            }
          }
        },
        "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
      },
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#241",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#242",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#114",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#115",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "schema-org:name": "UPC",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#243",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#244",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#245",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#246",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#118",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#119",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "schema-org:name": "Name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#247",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#248",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "schema-org:name": "Product ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#249",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#250",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#124",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#125",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "schema-org:name": "Unit",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#251",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#252",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#128",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#129",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "schema-org:name": "Available",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#253",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#254",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#132",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#133",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "schema-org:name": "Quantity",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#256",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#146",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#147",
          "@type": "data:Object",
          "data:available": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:boolean",
              "@value": "true"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\sd3deef3rgrgf4r"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Acme Product"
            }
          },
          "data:quantity": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "200"
            }
          },
          "data:unit": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "ml"
            }
          },
          "data:upc": {
            "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "123456789101"
            }
          }
        },
        "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
      },
      "schema-org:description": "A single product representing an item in the store.",
      "schema-org:name": "A product resource",
      "shacl:closed": false,
      "shacl:name": "Product",
      "shacl:property": [
        {
          "@id": "amf://id#257",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#258",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#114",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#115",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "042100005264"
                }
              },
              "shacl:raw": "042100005264"
            },
            "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
            "schema-org:name": "UPC",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "upc",
            "shacl:pattern": "^[0-9]{12,12}$"
          },
          "shacl:minCount": 1,
          "shacl:name": "upc",
          "shacl:path": {
            "@id": "data:upc"
          }
        },
        {
          "@id": "amf://id#259",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#260",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#261",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#262",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#118",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#119",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "Acme product - mentol flavor, 500 ml."
                }
              },
              "shacl:raw": "Acme product - mentol flavor, 500 ml."
            },
            "schema-org:description": "Product name",
            "schema-org:name": "Name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#263",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#264",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
            "schema-org:name": "Product ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "id",
            "shacl:pattern": "^[0-9a-zA-Z-]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#265",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#266",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#124",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#125",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "ml"
                }
              },
              "shacl:raw": "ml"
            },
            "schema-org:description": "The unit of measuremet for the quantity property.",
            "schema-org:name": "Unit",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "unit"
          },
          "shacl:minCount": 1,
          "shacl:name": "unit",
          "shacl:path": {
            "@id": "data:unit"
          }
        },
        {
          "@id": "amf://id#267",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#268",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#128",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#129",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "true"
                }
              },
              "shacl:raw": "true"
            },
            "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
            "schema-org:name": "Available",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:name": "available"
          },
          "shacl:minCount": 1,
          "shacl:name": "available",
          "shacl:path": {
            "@id": "data:available"
          }
        },
        {
          "@id": "amf://id#269",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#270",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#132",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#133",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "500"
                }
              },
              "shacl:raw": "500"
            },
            "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
            "schema-org:name": "Quantity",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "quantity"
          },
          "shacl:minCount": 1,
          "shacl:name": "quantity",
          "shacl:path": {
            "@id": "data:quantity"
          }
        }
      ]
    },
    {
      "@id": "amf://id#273",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#35",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#36",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:favouriteNumber": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_13",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "10"
            }
          },
          "data:favouriteTime": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_14",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "10:29:52"
            }
          },
          "data:gender": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
            }
          },
          "data:image": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:nillable": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_15",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:nil",
              "@value": "null"
            }
          },
          "data:tagline": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#274",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#275",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's favourite time of day",
            "schema-org:name": "Some example",
            "shacl:datatype": {
              "@id": "xsd:time"
            },
            "shacl:name": "favouriteTime"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteTime",
          "shacl:path": {
            "@id": "data:favouriteTime"
          }
        },
        {
          "@id": "amf://id#276",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#277",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#41",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#42",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "shacl:raw": "25"
            },
            "raml-shapes:multipleOf": 5,
            "schema-org:name": "Favourite number",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:maxInclusive": 9999,
            "shacl:minInclusive": 0,
            "shacl:name": "favouriteNumber"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteNumber",
          "shacl:path": {
            "@id": "data:favouriteNumber"
          }
        },
        {
          "@id": "amf://id#278",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#279",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "Newsletter consent",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#45",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "shacl:defaultValueStr": "false",
            "shacl:name": "newsletter"
          },
          "shacl:minCount": 0,
          "shacl:name": "newsletter",
          "shacl:path": {
            "@id": "data:newsletter"
          }
        },
        {
          "@id": "amf://id#280",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#281",
            "@type": [
              "raml-shapes:FileShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:fileType": [
              "image/png",
              "image/jpeg",
              "image/jpg",
              "image/gif"
            ],
            "shacl:maxLength": 1000,
            "shacl:minLength": 10
          },
          "shacl:minCount": 0,
          "shacl:name": "fietype",
          "shacl:path": {
            "@id": "data:fietype"
          }
        },
        {
          "@id": "amf://id#282",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#283",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#284",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#285",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "schema-org:name": "Tagline",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#286",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#287",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#54",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#55",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "schema-org:name": "Person name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#288",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#289",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#58",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#59",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "raml-shapes:dateTimeOnly",
                  "@value": "2018-04-09T19:10:15"
                }
              },
              "shacl:raw": "2018-04-09T19:10:15"
            },
            "shacl:datatype": {
              "@id": "raml-shapes:dateTimeOnly"
            },
            "shacl:name": "created"
          },
          "shacl:minCount": 0,
          "shacl:name": "created",
          "shacl:path": {
            "@id": "data:created"
          }
        },
        {
          "@id": "amf://id#290",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#291",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "schema-org:name": "Profile URL",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#292",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#293",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
            "schema-org:name": "ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:maxLength": 32,
            "shacl:minLength": 32,
            "shacl:name": "id",
            "shacl:pattern": "^[A-Za-z0-9]*$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#294",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#295",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "schema-org:name": "Language",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#296",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#297",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Very unpractical property to have in a data store.\n",
            "schema-org:name": "Age",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 0,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        },
        {
          "@id": "amf://id#298",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#299",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#70",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              {
                "@id": "amf://id#71",
                "@type": [
                  "raml-shapes:NilShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ]
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "nillable",
          "shacl:path": {
            "@id": "data:nillable"
          }
        },
        {
          "@id": "amf://id#300",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#301",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "schema-org:name": "Person birthday",
            "shacl:datatype": {
              "@id": "xsd:date"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#302",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#303",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#76",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#77",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#304",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#305",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "schema-org:name": "Url",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#306",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#307",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#308",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#309",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": [
              {
                "@id": "amf://id#93",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#94",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "schema-org:name": "Women",
                "shacl:raw": "female"
              },
              {
                "@id": "amf://id#95",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#96",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "schema-org:name": "Man",
                "shacl:raw": "male"
              },
              {
                "@id": "amf://id#97",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#98",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                },
                "schema-org:name": "Elmo",
                "shacl:raw": "other"
              }
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "schema-org:name": "Gender",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#309/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "male"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#91",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "female"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#92",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "other"
                }
              }
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#311",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#35",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#36",
          "@type": "data:Object",
          "data:birthday": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "1983-10-20"
            }
          },
          "data:etag": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "W\\244m4n5kj3gbn2nj4k4n4"
            }
          },
          "data:favouriteNumber": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_13",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:integer",
              "@value": "10"
            }
          },
          "data:favouriteTime": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_14",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "10:29:52"
            }
          },
          "data:gender": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "male"
            }
          },
          "data:id": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
            }
          },
          "data:image": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "data:language": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "en_GB"
            }
          },
          "data:name": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Pawel Psztyc"
            }
          },
          "data:nillable": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_15",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:nil",
              "@value": "null"
            }
          },
          "data:tagline": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "Some text about me."
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc"
            }
          }
        },
        "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
      },
      "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
      "schema-org:name": "A person resource",
      "shacl:closed": false,
      "shacl:name": "AppPerson",
      "shacl:property": [
        {
          "@id": "amf://id#312",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#313",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's favourite time of day",
            "schema-org:name": "Some example",
            "shacl:datatype": {
              "@id": "xsd:time"
            },
            "shacl:name": "favouriteTime"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteTime",
          "shacl:path": {
            "@id": "data:favouriteTime"
          }
        },
        {
          "@id": "amf://id#314",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#315",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#41",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#42",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:integer",
                  "@value": "25"
                }
              },
              "shacl:raw": "25"
            },
            "raml-shapes:multipleOf": 5,
            "schema-org:name": "Favourite number",
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:maxInclusive": 9999,
            "shacl:minInclusive": 0,
            "shacl:name": "favouriteNumber"
          },
          "shacl:minCount": 1,
          "shacl:name": "favouriteNumber",
          "shacl:path": {
            "@id": "data:favouriteNumber"
          }
        },
        {
          "@id": "amf://id#316",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#317",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:name": "Newsletter consent",
            "shacl:datatype": {
              "@id": "xsd:boolean"
            },
            "shacl:defaultValue": {
              "@id": "amf://id#45",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "false"
              }
            },
            "shacl:defaultValueStr": "false",
            "shacl:name": "newsletter"
          },
          "shacl:minCount": 0,
          "shacl:name": "newsletter",
          "shacl:path": {
            "@id": "data:newsletter"
          }
        },
        {
          "@id": "amf://id#318",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#319",
            "@type": [
              "raml-shapes:FileShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:fileType": [
              "image/png",
              "image/jpeg",
              "image/jpg",
              "image/gif"
            ],
            "shacl:maxLength": 1000,
            "shacl:minLength": 10
          },
          "shacl:minCount": 0,
          "shacl:name": "fietype",
          "shacl:path": {
            "@id": "data:fietype"
          }
        },
        {
          "@id": "amf://id#320",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#321",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        },
        {
          "@id": "amf://id#322",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#323",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The brief description (tagline) of this person.",
            "schema-org:name": "Tagline",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "tagline"
          },
          "shacl:minCount": 1,
          "shacl:name": "tagline",
          "shacl:path": {
            "@id": "data:tagline"
          }
        },
        {
          "@id": "amf://id#324",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#325",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#54",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#55",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "John Smith"
                }
              },
              "shacl:raw": "John Smith"
            },
            "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
            "schema-org:name": "Person name",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "name",
            "shacl:pattern": "^[0-9a-zA-Z ]+$"
          },
          "shacl:minCount": 1,
          "shacl:name": "name",
          "shacl:path": {
            "@id": "data:name"
          }
        },
        {
          "@id": "amf://id#326",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#327",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#58",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#59",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "raml-shapes:dateTimeOnly",
                  "@value": "2018-04-09T19:10:15"
                }
              },
              "shacl:raw": "2018-04-09T19:10:15"
            },
            "shacl:datatype": {
              "@id": "raml-shapes:dateTimeOnly"
            },
            "shacl:name": "created"
          },
          "shacl:minCount": 0,
          "shacl:name": "created",
          "shacl:path": {
            "@id": "data:created"
          }
        },
        {
          "@id": "amf://id#328",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#329",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of this person's profile.",
            "schema-org:name": "Profile URL",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#330",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#331",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
            "schema-org:name": "ID",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:maxLength": 32,
            "shacl:minLength": 32,
            "shacl:name": "id",
            "shacl:pattern": "^[A-Za-z0-9]*$"
          },
          "shacl:minCount": 1,
          "shacl:name": "id",
          "shacl:path": {
            "@id": "data:id"
          }
        },
        {
          "@id": "amf://id#332",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#333",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The user's preferred language for rendering.",
            "schema-org:name": "Language",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "language"
          },
          "shacl:minCount": 1,
          "shacl:name": "language",
          "shacl:path": {
            "@id": "data:language"
          }
        },
        {
          "@id": "amf://id#334",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#335",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Very unpractical property to have in a data store.\n",
            "schema-org:name": "Age",
            "shacl:datatype": {
              "@id": "xsd:integer"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 0,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        },
        {
          "@id": "amf://id#336",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#337",
            "@type": [
              "raml-shapes:UnionShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:anyOf": [
              {
                "@id": "amf://id#70",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "shacl:datatype": {
                  "@id": "xsd:string"
                }
              },
              {
                "@id": "amf://id#71",
                "@type": [
                  "raml-shapes:NilShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ]
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "nillable",
          "shacl:path": {
            "@id": "data:nillable"
          }
        },
        {
          "@id": "amf://id#338",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#339",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
            "schema-org:name": "Person birthday",
            "shacl:datatype": {
              "@id": "xsd:date"
            },
            "shacl:name": "birthday"
          },
          "shacl:minCount": 1,
          "shacl:name": "birthday",
          "shacl:path": {
            "@id": "data:birthday"
          }
        },
        {
          "@id": "amf://id#340",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#341",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#76",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#77",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#342",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#343",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "schema-org:name": "Url",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#344",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#345",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          },
          "shacl:minCount": 1,
          "shacl:name": "image",
          "shacl:path": {
            "@id": "data:image"
          }
        },
        {
          "@id": "amf://id#346",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#347",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": [
              {
                "@id": "amf://id#93",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#94",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "schema-org:name": "Women",
                "shacl:raw": "female"
              },
              {
                "@id": "amf://id#95",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#96",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "schema-org:name": "Man",
                "shacl:raw": "male"
              },
              {
                "@id": "amf://id#97",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#98",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                },
                "schema-org:name": "Elmo",
                "shacl:raw": "other"
              }
            ],
            "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
            "schema-org:name": "Gender",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:in": {
              "@id": "amf://id#347/list",
              "@type": "rdfs:Seq",
              "rdfs:_1": {
                "@id": "amf://id#90",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "male"
                }
              },
              "rdfs:_2": {
                "@id": "amf://id#91",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "female"
                }
              },
              "rdfs:_3": {
                "@id": "amf://id#92",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "other"
                }
              }
            },
            "shacl:name": "gender?"
          },
          "shacl:minCount": 0,
          "shacl:name": "gender",
          "shacl:path": {
            "@id": "data:gender"
          }
        }
      ]
    },
    {
      "@id": "amf://id#352",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Notification",
      "shacl:property": [
        {
          "@id": "amf://id#353",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#354",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#355",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "items"
            },
            "schema-org:description": "Integer array item type",
            "schema-org:name": "Scalar array (integer)",
            "shacl:name": "scalarArray"
          },
          "shacl:minCount": 1,
          "shacl:name": "scalarArray",
          "shacl:path": {
            "@id": "data:scalarArray"
          }
        },
        {
          "@id": "amf://id#356",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#357",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#358",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              }
            }
          },
          "shacl:minCount": 0,
          "shacl:name": "otherScalar",
          "shacl:path": {
            "@id": "data:otherScalar"
          }
        }
      ]
    },
    {
      "@id": "amf://id#360",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "shacl:closed": false,
      "shacl:name": "Notification",
      "shacl:property": [
        {
          "@id": "amf://id#361",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#362",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#363",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "items"
            },
            "schema-org:description": "Integer array item type",
            "schema-org:name": "Scalar array (integer)",
            "shacl:name": "scalarArray"
          },
          "shacl:minCount": 1,
          "shacl:name": "scalarArray",
          "shacl:path": {
            "@id": "data:scalarArray"
          }
        },
        {
          "@id": "amf://id#364",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#365",
            "@type": [
              "raml-shapes:ArrayShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "raml-shapes:items": {
              "@id": "amf://id#366",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "shacl:datatype": {
                "@id": "xsd:string"
              }
            }
          },
          "shacl:minCount": 0,
          "shacl:name": "otherScalar",
          "shacl:path": {
            "@id": "data:otherScalar"
          }
        }
      ]
    },
    {
      "@id": "amf://id#69",
      "@type": [
        "raml-shapes:UnionShape",
        "shacl:Shape",
        "raml-shapes:Shape"
      ],
      "raml-shapes:anyOf": [
        {
          "@id": "amf://id#70",
          "@type": [
            "raml-shapes:ScalarShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "shacl:datatype": {
            "@id": "xsd:string"
          }
        },
        {
          "@id": "amf://id#71",
          "@type": [
            "raml-shapes:NilShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ]
        }
      ],
      "shacl:name": "amf_inline_type_1"
    },
    {
      "@id": "amf://id#75",
      "@type": [
        "shacl:NodeShape",
        "shacl:Shape",
        "raml-shapes:Shape",
        "doc:DomainElement"
      ],
      "doc:examples": {
        "@id": "amf://id#76",
        "@type": [
          "doc:Example",
          "doc:DomainElement"
        ],
        "doc:strict": true,
        "doc:structuredValue": {
          "@id": "amf://id#77",
          "@type": "data:Object",
          "data:thumb": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
            }
          },
          "data:url": {
            "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
            "@type": "data:Scalar",
            "data:value": {
              "@type": "xsd:string",
              "@value": "https://domain.com/profile/pawel.psztyc/image"
            }
          }
        },
        "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
      },
      "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
      "shacl:closed": false,
      "shacl:name": "image",
      "shacl:property": [
        {
          "@id": "amf://id#78",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#79",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
            "schema-org:name": "Url",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "url"
          },
          "shacl:minCount": 1,
          "shacl:name": "url",
          "shacl:path": {
            "@id": "data:url"
          }
        },
        {
          "@id": "amf://id#80",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#81",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
            "schema-org:name": "Thumbnail",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "thumb"
          },
          "shacl:minCount": 1,
          "shacl:name": "thumb",
          "shacl:path": {
            "@id": "data:thumb"
          }
        }
      ]
    }
  ],
  "doc:encodes": {
    "@id": "amf://id#235",
    "@type": [
      "schema-org:WebAPI",
      "doc:RootDomainElement",
      "doc:DomainElement"
    ],
    "raml-http:endpoint": [
      {
        "@id": "amf://id#236",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/test",
        "hydra:supportedOperation": {
          "@id": "amf://id#237",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:expects": {
            "@id": "amf://id#238",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:payload": [
              {
                "@id": "amf://id#239",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#240/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Product",
                  "doc:link-target": {
                    "@id": "amf://id#240"
                  }
                }
              },
              {
                "@id": "amf://id#255",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/xml",
                "raml-http:schema": {
                  "@id": "amf://id#256/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Product",
                  "doc:link-target": {
                    "@id": "amf://id#256"
                  }
                }
              }
            ]
          },
          "hydra:method": "post",
          "hydra:returns": {
            "@id": "amf://id#271",
            "@type": [
              "raml-http:Response",
              "doc:DomainElement"
            ],
            "raml-http:payload": [
              {
                "@id": "amf://id#272",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#273/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "AppPerson",
                  "doc:link-target": {
                    "@id": "amf://id#273"
                  }
                }
              },
              {
                "@id": "amf://id#310",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/xml",
                "raml-http:schema": {
                  "@id": "amf://id#311/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "AppPerson",
                  "doc:link-target": {
                    "@id": "amf://id#311"
                  }
                }
              }
            ],
            "schema-org:name": "200",
            "hydra:statusCode": "200"
          }
        }
      },
      {
        "@id": "amf://id#348",
        "@type": [
          "raml-http:EndPoint",
          "doc:DomainElement"
        ],
        "raml-http:path": "/scalarArrays",
        "hydra:supportedOperation": {
          "@id": "amf://id#349",
          "@type": [
            "hydra:Operation",
            "doc:DomainElement"
          ],
          "hydra:expects": {
            "@id": "amf://id#350",
            "@type": [
              "raml-http:Request",
              "doc:DomainElement"
            ],
            "raml-http:payload": [
              {
                "@id": "amf://id#351",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/json",
                "raml-http:schema": {
                  "@id": "amf://id#352/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Notification",
                  "doc:link-target": {
                    "@id": "amf://id#352"
                  }
                }
              },
              {
                "@id": "amf://id#359",
                "@type": [
                  "raml-http:Payload",
                  "doc:DomainElement"
                ],
                "raml-http:mediaType": "application/xml",
                "raml-http:schema": {
                  "@id": "amf://id#360/linked_1",
                  "@type": [
                    "shacl:NodeShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "doc:link-label": "Notification",
                  "doc:link-target": {
                    "@id": "amf://id#360"
                  }
                }
              }
            ]
          },
          "hydra:method": "post"
        }
      }
    ],
    "raml-http:server": {
      "@id": "amf://id#367",
      "@type": [
        "raml-http:Server",
        "doc:DomainElement"
      ],
      "raml-http:url": "http://{environment}.api.domain.com/{version}/",
      "raml-http:variable": [
        {
          "@id": "amf://id#368",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:schema": {
            "@id": "amf://id#369",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "environment"
          },
          "schema-org:name": "environment",
          "hydra:required": true
        },
        {
          "@id": "amf://id#370",
          "@type": [
            "raml-http:Parameter",
            "doc:DomainElement"
          ],
          "raml-http:binding": "path",
          "raml-http:schema": {
            "@id": "amf://id#371",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "version"
          },
          "schema-org:name": "version",
          "hydra:required": true
        }
      ]
    },
    "schema-org:name": "My super cool, example API",
    "schema-org:version": "v1"
  },
  "doc:references": [
    {
      "@id": "amf://id#219",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#220",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Not found</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#221",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#222",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Invalid request</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#223",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#224",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<resource error=\"true\">\n  <message>Unauthorized</message>\n</resource>\n"
      }
    },
    {
      "@id": "amf://id#225",
      "@type": [
        "doc:ExternalFragment",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#226",
        "@type": [
          "doc:ExternalDomainElement",
          "doc:DomainElement"
        ],
        "doc:raw": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\">\n  <xs:element name=\"resource\">\n    <xs:complexType>\n      <xs:sequence>\n        <xs:element name=\"message\" type=\"xs:string\"></xs:element>\n      </xs:sequence>\n      <xs:attribute name=\"error\" type=\"xs:boolean\" use=\"required\"/>\n    </xs:complexType>\n  </xs:element>\n</xs:schema>\n"
      }
    },
    {
      "@id": "amf://id#227",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#111",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#146",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#147",
            "@type": "data:Object",
            "data:available": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_7",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:boolean",
                "@value": "true"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_8",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\sd3deef3rgrgf4r"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "we2322-4f4f4f-f4f4ff-f4f4ff4"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Acme Product"
              }
            },
            "data:quantity": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "200"
              }
            },
            "data:unit": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "ml"
              }
            },
            "data:upc": {
              "@id": "file://demo/demo-api/resourceTypes/product.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "123456789101"
              }
            }
          },
          "shacl:raw": "  id: we2322-4f4f4f-f4f4ff-f4f4ff4\n  name: Acme Product\n  quantity: 200\n  unit: ml\n  upc: \"123456789101\"\n  available: true\n  etag: \"W\\\\sd3deef3rgrgf4r\"\n"
        },
        "schema-org:description": "A single product representing an item in the store.",
        "schema-org:name": "A product resource",
        "shacl:closed": false,
        "shacl:name": "Product",
        "shacl:property": [
          {
            "@id": "amf://id#112",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#113",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#114",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#115",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "042100005264"
                  }
                },
                "shacl:raw": "042100005264"
              },
              "schema-org:description": "The Universal Produc Code. It consists of 12 numerical digits. However, because of the\ninteger precision limitation in JavaScript it is represented as a string.\n",
              "schema-org:name": "UPC",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "upc",
              "shacl:pattern": "^[0-9]{12,12}$"
            },
            "shacl:minCount": 1,
            "shacl:name": "upc",
            "shacl:path": {
              "@id": "data:upc"
            }
          },
          {
            "@id": "amf://id#48",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#49",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "schema-org:name": "Etag",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#116",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#117",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#118",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#119",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "Acme product - mentol flavor, 500 ml."
                  }
                },
                "shacl:raw": "Acme product - mentol flavor, 500 ml."
              },
              "schema-org:description": "Product name",
              "schema-org:name": "Name",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#120",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#121",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Product id. It is a UUID of the database record.\n__This property will be ignored when creating an object.__\nIt will be available when the product is stored in the datastore.\n",
              "schema-org:name": "Product ID",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "id",
              "shacl:pattern": "^[0-9a-zA-Z-]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#122",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#123",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#124",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#125",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "ml"
                  }
                },
                "shacl:raw": "ml"
              },
              "schema-org:description": "The unit of measuremet for the quantity property.",
              "schema-org:name": "Unit",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "unit"
            },
            "shacl:minCount": 1,
            "shacl:name": "unit",
            "shacl:path": {
              "@id": "data:unit"
            }
          },
          {
            "@id": "amf://id#126",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#127",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#128",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#129",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:boolean",
                    "@value": "true"
                  }
                },
                "shacl:raw": "true"
              },
              "schema-org:description": "Product current availability in the store.\nProduct may be not available but the users still can order it with later delivery date.\n",
              "schema-org:name": "Available",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:name": "available"
            },
            "shacl:minCount": 1,
            "shacl:name": "available",
            "shacl:path": {
              "@id": "data:available"
            }
          },
          {
            "@id": "amf://id#130",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#131",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#132",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#133",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "500"
                  }
                },
                "shacl:raw": "500"
              },
              "schema-org:description": "The quantity of the product in the one unit of measurement.\nSee `unit` property for more information.\n",
              "schema-org:name": "Quantity",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:name": "quantity"
            },
            "shacl:minCount": 1,
            "shacl:name": "quantity",
            "shacl:path": {
              "@id": "data:quantity"
            }
          }
        ]
      },
      "doc:references": {
        "@id": "amf://id#228",
        "@type": [
          "doc:DataType",
          "doc:Fragment",
          "doc:Unit"
        ],
        "doc:encodes": {
          "@id": "amf://id#164",
          "@type": [
            "shacl:NodeShape",
            "shacl:Shape",
            "raml-shapes:Shape",
            "doc:DomainElement"
          ],
          "schema-org:description": "Common properties for all resources returned by the API.\n",
          "shacl:closed": false,
          "shacl:name": "Resource",
          "shacl:property": {
            "@id": "amf://id#48",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#49",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "schema-org:name": "Etag",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          }
        }
      }
    },
    {
      "@id": "amf://id#229",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#34",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#35",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#36",
            "@type": "data:Object",
            "data:birthday": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_4",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "1983-10-20"
              }
            },
            "data:etag": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_12",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "W\\244m4n5kj3gbn2nj4k4n4"
              }
            },
            "data:favouriteNumber": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_13",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:integer",
                "@value": "10"
              }
            },
            "data:favouriteTime": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_14",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "10:29:52"
              }
            },
            "data:gender": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_5",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "male"
              }
            },
            "data:id": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "R34fg663H9KW9MMSKISIhTs1dR7Hss7e"
              }
            },
            "data:image": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7",
              "@type": "data:Object",
              "data:thumb": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_9",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                }
              },
              "data:url": {
                "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/object_7/scalar_8",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:string",
                  "@value": "https://domain.com/profile/pawel.psztyc/image"
                }
              }
            },
            "data:language": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_11",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "en_GB"
              }
            },
            "data:name": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Pawel Psztyc"
              }
            },
            "data:nillable": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_15",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:nil",
                "@value": "null"
              }
            },
            "data:tagline": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_10",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "Some text about me."
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/app-person.raml#/shape/example/default-example/object_1/scalar_6",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc"
              }
            }
          },
          "shacl:raw": "  id: \"R34fg663H9KW9MMSKISIhTs1dR7Hss7e\"\n  name: \"Pawel Psztyc\"\n  birthday: \"1983-10-20\"\n  gender: male\n  url: \"https://domain.com/profile/pawel.psztyc\"\n  image:\n    url: https://domain.com/profile/pawel.psztyc/image\n    thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n  tagline: Some text about me.\n  language: en_GB\n  etag: \"W\\\\244m4n5kj3gbn2nj4k4n4\"\n  favouriteNumber: 10\n  favouriteTime: 10:29:52\n  nillable: null\n\n"
        },
        "schema-org:description": "An object representing a person in the API.\nThis object will be used in all methods returning a Person or list of people.\n",
        "schema-org:name": "A person resource",
        "shacl:closed": false,
        "shacl:name": "AppPerson",
        "shacl:property": [
          {
            "@id": "amf://id#37",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#38",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's favourite time of day",
              "schema-org:name": "Some example",
              "shacl:datatype": {
                "@id": "xsd:time"
              },
              "shacl:name": "favouriteTime"
            },
            "shacl:minCount": 1,
            "shacl:name": "favouriteTime",
            "shacl:path": {
              "@id": "data:favouriteTime"
            }
          },
          {
            "@id": "amf://id#39",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#40",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#41",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#42",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:integer",
                    "@value": "25"
                  }
                },
                "shacl:raw": "25"
              },
              "raml-shapes:multipleOf": 5,
              "schema-org:name": "Favourite number",
              "shacl:datatype": {
                "@id": "raml-shapes:number"
              },
              "shacl:maxInclusive": 9999,
              "shacl:minInclusive": 0,
              "shacl:name": "favouriteNumber"
            },
            "shacl:minCount": 1,
            "shacl:name": "favouriteNumber",
            "shacl:path": {
              "@id": "data:favouriteNumber"
            }
          },
          {
            "@id": "amf://id#43",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#44",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:name": "Newsletter consent",
              "shacl:datatype": {
                "@id": "xsd:boolean"
              },
              "shacl:defaultValue": {
                "@id": "amf://id#45",
                "@type": "data:Scalar",
                "data:value": {
                  "@type": "xsd:boolean",
                  "@value": "false"
                }
              },
              "shacl:defaultValueStr": "false",
              "shacl:name": "newsletter"
            },
            "shacl:minCount": 0,
            "shacl:name": "newsletter",
            "shacl:path": {
              "@id": "data:newsletter"
            }
          },
          {
            "@id": "amf://id#46",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#47",
              "@type": [
                "raml-shapes:FileShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:fileType": [
                "image/png",
                "image/jpeg",
                "image/jpg",
                "image/gif"
              ],
              "shacl:maxLength": 1000,
              "shacl:minLength": 10
            },
            "shacl:minCount": 0,
            "shacl:name": "fietype",
            "shacl:path": {
              "@id": "data:fietype"
            }
          },
          {
            "@id": "amf://id#48",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#49",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
              "schema-org:name": "Etag",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "etag"
            },
            "shacl:minCount": 1,
            "shacl:name": "etag",
            "shacl:path": {
              "@id": "data:etag"
            }
          },
          {
            "@id": "amf://id#50",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#51",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The brief description (tagline) of this person.",
              "schema-org:name": "Tagline",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "tagline"
            },
            "shacl:minCount": 1,
            "shacl:name": "tagline",
            "shacl:path": {
              "@id": "data:tagline"
            }
          },
          {
            "@id": "amf://id#52",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#53",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#54",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#55",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "John Smith"
                  }
                },
                "shacl:raw": "John Smith"
              },
              "schema-org:description": "Person full name. The input will be rejected if this property is not set while creating new object.",
              "schema-org:name": "Person name",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "name",
              "shacl:pattern": "^[0-9a-zA-Z ]+$"
            },
            "shacl:minCount": 1,
            "shacl:name": "name",
            "shacl:path": {
              "@id": "data:name"
            }
          },
          {
            "@id": "amf://id#56",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#57",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": {
                "@id": "amf://id#58",
                "@type": [
                  "doc:Example",
                  "doc:DomainElement"
                ],
                "doc:strict": true,
                "doc:structuredValue": {
                  "@id": "amf://id#59",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "raml-shapes:dateTimeOnly",
                    "@value": "2018-04-09T19:10:15"
                  }
                },
                "shacl:raw": "2018-04-09T19:10:15"
              },
              "shacl:datatype": {
                "@id": "raml-shapes:dateTimeOnly"
              },
              "shacl:name": "created"
            },
            "shacl:minCount": 0,
            "shacl:name": "created",
            "shacl:path": {
              "@id": "data:created"
            }
          },
          {
            "@id": "amf://id#60",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#61",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of this person's profile.",
              "schema-org:name": "Profile URL",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#62",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#63",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "A unique identifier of a person.\n\nIt is a 32 bit string containing alphanumeric characters.\n",
              "schema-org:name": "ID",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:maxLength": 32,
              "shacl:minLength": 32,
              "shacl:name": "id",
              "shacl:pattern": "^[A-Za-z0-9]*$"
            },
            "shacl:minCount": 1,
            "shacl:name": "id",
            "shacl:path": {
              "@id": "data:id"
            }
          },
          {
            "@id": "amf://id#64",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#65",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The user's preferred language for rendering.",
              "schema-org:name": "Language",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "language"
            },
            "shacl:minCount": 1,
            "shacl:name": "language",
            "shacl:path": {
              "@id": "data:language"
            }
          },
          {
            "@id": "amf://id#66",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#67",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "Very unpractical property to have in a data store.\n",
              "schema-org:name": "Age",
              "shacl:datatype": {
                "@id": "xsd:integer"
              },
              "shacl:name": "age"
            },
            "shacl:minCount": 0,
            "shacl:name": "age",
            "shacl:path": {
              "@id": "data:age"
            }
          },
          {
            "@id": "amf://id#68",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#69/linked_1",
              "@type": [
                "raml-shapes:UnionShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "doc:link-label": "amf_inline_type_1",
              "doc:link-target": {
                "@id": "amf://id#69"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "nillable",
            "shacl:path": {
              "@id": "data:nillable"
            }
          },
          {
            "@id": "amf://id#72",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#73",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The person's date of birth, represented as YYYY-MM-DD.",
              "schema-org:name": "Person birthday",
              "shacl:datatype": {
                "@id": "xsd:date"
              },
              "shacl:name": "birthday"
            },
            "shacl:minCount": 1,
            "shacl:name": "birthday",
            "shacl:path": {
              "@id": "data:birthday"
            }
          },
          {
            "@id": "amf://id#74",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#75/linked_1",
              "@type": [
                "shacl:NodeShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:link-label": "image",
              "doc:link-target": {
                "@id": "amf://id#75"
              }
            },
            "shacl:minCount": 1,
            "shacl:name": "image",
            "shacl:path": {
              "@id": "data:image"
            }
          },
          {
            "@id": "amf://id#88",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#89",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "doc:examples": [
                {
                  "@id": "amf://id#93",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#94",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "female"
                    }
                  },
                  "schema-org:name": "Women",
                  "shacl:raw": "female"
                },
                {
                  "@id": "amf://id#95",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#96",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "male"
                    }
                  },
                  "schema-org:name": "Man",
                  "shacl:raw": "male"
                },
                {
                  "@id": "amf://id#97",
                  "@type": [
                    "doc:Example",
                    "doc:DomainElement"
                  ],
                  "doc:strict": true,
                  "doc:structuredValue": {
                    "@id": "amf://id#98",
                    "@type": "data:Scalar",
                    "data:value": {
                      "@type": "xsd:string",
                      "@value": "other"
                    }
                  },
                  "schema-org:name": "Elmo",
                  "shacl:raw": "other"
                }
              ],
              "schema-org:description": "The person's gender. Possible values includes, but are not limited to, the following values:\n* \"male\" - Male gender.\n* \"female\" - Female gender.\n* \"other\" - Other.\n",
              "schema-org:name": "Gender",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:in": {
                "@id": "amf://id#89/list",
                "@type": "rdfs:Seq",
                "rdfs:_1": {
                  "@id": "amf://id#90",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "male"
                  }
                },
                "rdfs:_2": {
                  "@id": "amf://id#91",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "female"
                  }
                },
                "rdfs:_3": {
                  "@id": "amf://id#92",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "other"
                  }
                }
              },
              "shacl:name": "gender?"
            },
            "shacl:minCount": 0,
            "shacl:name": "gender",
            "shacl:path": {
              "@id": "data:gender"
            }
          }
        ]
      },
      "doc:references": [
        {
          "@id": "amf://id#230",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#75",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "doc:examples": {
              "@id": "amf://id#76",
              "@type": [
                "doc:Example",
                "doc:DomainElement"
              ],
              "doc:strict": true,
              "doc:structuredValue": {
                "@id": "amf://id#77",
                "@type": "data:Object",
                "data:thumb": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
                  }
                },
                "data:url": {
                  "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
                  "@type": "data:Scalar",
                  "data:value": {
                    "@type": "xsd:string",
                    "@value": "https://domain.com/profile/pawel.psztyc/image"
                  }
                }
              },
              "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
            },
            "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
            "shacl:closed": false,
            "shacl:name": "image",
            "shacl:property": [
              {
                "@id": "amf://id#78",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#79",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
                  "schema-org:name": "Url",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "url"
                },
                "shacl:minCount": 1,
                "shacl:name": "url",
                "shacl:path": {
                  "@id": "data:url"
                }
              },
              {
                "@id": "amf://id#80",
                "@type": [
                  "shacl:PropertyShape",
                  "shacl:Shape",
                  "raml-shapes:Shape"
                ],
                "raml-shapes:range": {
                  "@id": "amf://id#81",
                  "@type": [
                    "raml-shapes:ScalarShape",
                    "shacl:Shape",
                    "raml-shapes:Shape",
                    "doc:DomainElement"
                  ],
                  "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
                  "schema-org:name": "Thumbnail",
                  "shacl:datatype": {
                    "@id": "xsd:string"
                  },
                  "shacl:name": "thumb"
                },
                "shacl:minCount": 1,
                "shacl:name": "thumb",
                "shacl:path": {
                  "@id": "data:thumb"
                }
              }
            ]
          }
        },
        {
          "@id": "amf://id#228",
          "@type": [
            "doc:DataType",
            "doc:Fragment",
            "doc:Unit"
          ],
          "doc:encodes": {
            "@id": "amf://id#164",
            "@type": [
              "shacl:NodeShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "Common properties for all resources returned by the API.\n",
            "shacl:closed": false,
            "shacl:name": "Resource",
            "shacl:property": {
              "@id": "amf://id#48",
              "@type": [
                "shacl:PropertyShape",
                "shacl:Shape",
                "raml-shapes:Shape"
              ],
              "raml-shapes:range": {
                "@id": "amf://id#49",
                "@type": [
                  "raml-shapes:ScalarShape",
                  "shacl:Shape",
                  "raml-shapes:Shape",
                  "doc:DomainElement"
                ],
                "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
                "schema-org:name": "Etag",
                "shacl:datatype": {
                  "@id": "xsd:string"
                },
                "shacl:name": "etag"
              },
              "shacl:minCount": 1,
              "shacl:name": "etag",
              "shacl:path": {
                "@id": "data:etag"
              }
            }
          }
        }
      ]
    },
    {
      "@id": "amf://id#231",
      "@type": [
        "doc:Module",
        "doc:Unit"
      ],
      "doc:declares": {
        "@id": "amf://id#232",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "shacl:closed": false,
        "shacl:name": "TypeFromLibray",
        "shacl:property": {
          "@id": "amf://id#233",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#234",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "shacl:datatype": {
              "@id": "raml-shapes:number"
            },
            "shacl:name": "age"
          },
          "shacl:minCount": 1,
          "shacl:name": "age",
          "shacl:path": {
            "@id": "data:age"
          }
        }
      },
      "doc:usage": "This is a Library raml"
    },
    {
      "@id": "amf://id#230",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#75",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "doc:examples": {
          "@id": "amf://id#76",
          "@type": [
            "doc:Example",
            "doc:DomainElement"
          ],
          "doc:strict": true,
          "doc:structuredValue": {
            "@id": "amf://id#77",
            "@type": "data:Object",
            "data:thumb": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_3",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image/thumb"
              }
            },
            "data:url": {
              "@id": "file://demo/demo-api/resourceTypes/image.raml#/shape/example/default-example/object_1/scalar_2",
              "@type": "data:Scalar",
              "data:value": {
                "@type": "xsd:string",
                "@value": "https://domain.com/profile/pawel.psztyc/image"
              }
            }
          },
          "shacl:raw": "  url: https://domain.com/profile/pawel.psztyc/image\n  thumb: https://domain.com/profile/pawel.psztyc/image/thumb\n"
        },
        "schema-org:description": "An image object representing an image object strored in the file store.\nThe image can be only included in the response. It has no effect if the Image appear in the\nrequest. Endpoint handles image creation on it's own and clients can't process images\nexcept of sending image data.\n",
        "shacl:closed": false,
        "shacl:name": "image",
        "shacl:property": [
          {
            "@id": "amf://id#78",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#79",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "The URL of the image.\nTo resize the image and crop it to a square, append the query string **?sz=x**, where x is the dimension in pixels of each side.\n",
              "schema-org:name": "Url",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "url"
            },
            "shacl:minCount": 1,
            "shacl:name": "url",
            "shacl:path": {
              "@id": "data:url"
            }
          },
          {
            "@id": "amf://id#80",
            "@type": [
              "shacl:PropertyShape",
              "shacl:Shape",
              "raml-shapes:Shape"
            ],
            "raml-shapes:range": {
              "@id": "amf://id#81",
              "@type": [
                "raml-shapes:ScalarShape",
                "shacl:Shape",
                "raml-shapes:Shape",
                "doc:DomainElement"
              ],
              "schema-org:description": "An URL to the thumbnail of the image. Thumbnails are 60x60px cropped images of the original image.\n",
              "schema-org:name": "Thumbnail",
              "shacl:datatype": {
                "@id": "xsd:string"
              },
              "shacl:name": "thumb"
            },
            "shacl:minCount": 1,
            "shacl:name": "thumb",
            "shacl:path": {
              "@id": "data:thumb"
            }
          }
        ]
      }
    },
    {
      "@id": "amf://id#228",
      "@type": [
        "doc:DataType",
        "doc:Fragment",
        "doc:Unit"
      ],
      "doc:encodes": {
        "@id": "amf://id#164",
        "@type": [
          "shacl:NodeShape",
          "shacl:Shape",
          "raml-shapes:Shape",
          "doc:DomainElement"
        ],
        "schema-org:description": "Common properties for all resources returned by the API.\n",
        "shacl:closed": false,
        "shacl:name": "Resource",
        "shacl:property": {
          "@id": "amf://id#48",
          "@type": [
            "shacl:PropertyShape",
            "shacl:Shape",
            "raml-shapes:Shape"
          ],
          "raml-shapes:range": {
            "@id": "amf://id#49",
            "@type": [
              "raml-shapes:ScalarShape",
              "shacl:Shape",
              "raml-shapes:Shape",
              "doc:DomainElement"
            ],
            "schema-org:description": "ETag of this resource for caching purposes.\n__This property will be ignored when creating an object.__\n",
            "schema-org:name": "Etag",
            "shacl:datatype": {
              "@id": "xsd:string"
            },
            "shacl:name": "etag"
          },
          "shacl:minCount": 1,
          "shacl:name": "etag",
          "shacl:path": {
            "@id": "data:etag"
          }
        }
      }
    }
  ]
}