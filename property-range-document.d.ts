/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   property-range-document.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {AmfHelperMixin} from '@api-components/amf-helper-mixin/amf-helper-mixin.js';

import {PropertyDocumentMixin} from './property-document-mixin.js';

declare namespace ApiElements {

  /**
   * `property-range-document`
   *
   * Renders a documentation for a shape property of AMF model.
   *
   * ## Styling
   *
   * `<property-range-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--property-range-document` | Mixin applied to this elment | `{}`
   * `--api-type-document-type-attribute-color` | Color of each attribute that describes a property | `#616161`
   * `--api-type-document-examples-title-color` | Color of examples section title | ``
   * `--api-type-document-examples-border-color` | Example section border color | `transparent`
   * `--code-background-color` | Background color of the examples section | ``
   * `--arc-font-body1` | Mixin applied to an example name label | `{}`
   * `--arc-font-body2` | Mixin applied to the examples section title | `{}`
   */
  class PropertyRangeDocument extends
    PropertyDocumentMixin(
    AmfHelperMixin(
    Object)) {
    range: any;

    /**
     * When set it removes actions bar from the examples render.
     */
    noExamplesActions: boolean|null|undefined;

    /**
     * Name of the property that is being described by this definition.
     */
    propertyName: string|null|undefined;

    /**
     * Computed value form the shape. True if the property is ENUM.
     */
    isEnum: boolean|null|undefined;

    /**
     * Computed value, true if current property is an union.
     */
    isUnion: boolean|null|undefined;

    /**
     * Computed value, true if current property is an object.
     */
    isObject: boolean|null|undefined;

    /**
     * Computed value, true if current property is an array.
     */
    isArray: boolean|null|undefined;

    /**
     * Computed value, true if current property is a File.
     */
    isFile: boolean|null|undefined;

    /**
     * Computed values for list of enums.
     * Enums are list of types names.
     */
    enumValues: Array<String|null>|null;
    _hasExamples: boolean|null|undefined;
    exampleSectionTitle: string|null|undefined;

    /**
     * Computes value for `isUnion` property.
     * Union type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsUnion(range: object|null): Boolean|null;

    /**
     * Computes value for `isObject` property.
     * Object type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsObject(range: object|null): Boolean|null;

    /**
     * Computes value for `isArray` property.
     * Array type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsArray(range: object|null): Boolean|null;
    _rangeChanged(range: any): void;

    /**
     * Computes value `isEnum` property.
     *
     * @param range Current `range` object.
     * @returns Curently it always returns `false`
     */
    _computeIsEnum(range: object|null): Boolean|null;

    /**
     * Computes value for `isFile` property
     *
     * @param range Range object of current shape.
     */
    _computeIsFile(range: object|null): Boolean|null;
    _computeObjectProperties(range: any): any;

    /**
     * Computes value for `enumValues` property.
     *
     * @param range Range object of current shape.
     * @returns List of enum types.
     */
    _computeEnumValues(range: object|null): Array<String|null>|null|undefined;
    _examplesChanged(e: any): void;
    _hasExamplesHandler(e: any): void;
    _listItemTemplate(label: any, title: any, key: any, isArray: any): any;
    _nonFilePropertisTemplate(): any;
    _filePropertisTemplate(): any;
    _enumTemplate(): any;
    render(): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "property-range-document": ApiElements.PropertyRangeDocument;
  }
}
