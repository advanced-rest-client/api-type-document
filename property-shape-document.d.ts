/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   property-shape-document.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="api-type-document.d.ts" />
/// <reference path="property-range-document.d.ts" />
/// <reference path="propery-document-mixin.d.ts" />

declare namespace ApiElements {

  /**
   * `property-shape-document`
   *
   * Renders a documentation for a shape property of AMF model.
   *
   * ## Styling
   *
   * `<property-shape-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--property-shape-document` | Mixin applied to this elment | `{}`
   * `--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`
   * `--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`
   * `--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`
   * `--arc-font-subhead` | Theme mixin, applied to the property title | `{}`
   * `--property-shape-document-title` | Mixin applied to the property title | `{}`
   * `--api-type-document-property-parent-color` | Color of the parent property label | `#757575`
   * `--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`
   */
  class PropertyShapeDocument extends
    ArcBehaviors.PropertyDocumentMixin(
    Polymer.Element) {

    /**
     * Computed value of shape's http://raml.org/vocabularies/shapes#range
     */
    readonly range: object|null;

    /**
     * Computed value of "display name" of the property
     */
    readonly displayName: string|null|undefined;

    /**
     * A type property name.
     * This may be different from `displayName` property if
     * `displayName` was specified in the API spec for this property.
     */
    readonly propertyName: string|null|undefined;

    /**
     * Computed value, true if `displayName` has been defined for this
     * property.
     */
    readonly hasDisplayName: boolean|null|undefined;

    /**
     * Computed value form the shape. True if the property is required.
     */
    readonly isRequired: boolean|null|undefined;

    /**
     * Computed value, true if current property is an union.
     */
    readonly isUnion: boolean|null|undefined;

    /**
     * Computed value, true if current property is an object.
     */
    readonly isObject: boolean|null|undefined;

    /**
     * Computed value, true if current property is an array.
     */
    readonly isArray: boolean|null|undefined;

    /**
     * Should be set if described properties has a parent type.
     * This is used when recursively iterating over properties.
     */
    parentTypeName: string|null|undefined;

    /**
     * Computes name of the property. This may be different from the
     * `displayName` if `displayName` is set in API spec.
     *
     * @param range Range object of current shape.
     * @returns Display name of the property
     */
    _computePropertyName(range: object|null): String|null;

    /**
     * Computes value for `hasDisplayName` property.
     * Indicates that `displayName` has been defined in the API specification.
     *
     * @param range Range object of current shape.
     */
    _computeHasDisplayName(range: object|null): Boolean|null;

    /**
     * Computes value for `isRequired` property.
     * In AMF model a property is required when `http://www.w3.org/ns/shacl#minCount`
     * does not equal `0`.
     *
     * @param shape Current shape object
     */
    _computeIsRequired(shape: object|null): Boolean|null;
  }
}

interface HTMLElementTagNameMap {
  "property-shape-document": ApiElements.PropertyShapeDocument;
}
