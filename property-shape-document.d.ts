/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   property-shape-document.html
 */

/// <reference path="../polymer/types/polymer-element.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-if.d.ts" />
/// <reference path="../polymer/types/lib/elements/dom-repeat.d.ts" />
/// <reference path="../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../paper-button/paper-button.d.ts" />
/// <reference path="api-type-document.d.ts" />
/// <reference path="property-range-document.d.ts" />

declare namespace ApiElements {

  /**
   * `property-shape-document`
   *
   * Renders a documentation for a shape property of AMF model.
   *
   * ## Styling
   *
   * `<property-shape-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--property-shape-document` | Mixin applied to this elment | `{}`
   * `--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`
   * `--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`
   * `--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`
   * `--arc-font-subhead` | Theme mixin, applied to the property title | `{}`
   * `--property-shape-document-title` | Mixin applied to the property title | `{}`
   * `--api-type-document-property-parent-color` | Color of the parent property label | `#757575`
   * `--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`
   */
  class PropertyShapeDocument extends
    ArcBehaviors.PropertyDocumentMixin(
    Polymer.Element) {

    /**
     * Computed value of shape's http://raml.org/vocabularies/shapes#range
     */
    readonly range: object|null;

    /**
     * Computed value of "display name" of the property
     */
    readonly displayName: string|null|undefined;

    /**
     * A type property name.
     * This may be different from `displayName` property if
     * `displayName` was specified in the API spec for this property.
     */
    readonly propertyName: string|null|undefined;

    /**
     * Computed value, true if `displayName` has been defined for this
     * property.
     */
    readonly hasDisplayName: boolean|null|undefined;

    /**
     * Computed value form the shape. True if the property is required.
     */
    readonly isRequired: boolean|null|undefined;

    /**
     * Computed value, true if current property is an union.
     */
    readonly isUnion: boolean|null|undefined;

    /**
     * Computed list of union type types to render in union type
     * selector.
     * Each item has `label` and `isScalar` property.
     */
    readonly unionTypes: Array<object|null>|null;

    /**
     * Computed value, true if current property is an object.
     */
    readonly isObject: boolean|null|undefined;

    /**
     * Computed value, true if current property is an array.
     */
    readonly isArray: boolean|null|undefined;

    /**
     * Should be set if described properties has a parent type.
     * This is used when recursively iterating over properties.
     */
    parentTypeName: string|null|undefined;

    /**
     * Selected index of union type in `unionTypes` array.
     */
    selectedUnion: number|null|undefined;

    /**
     * True when selected union type is a scalar value.
     */
    readonly unionIsScalar: boolean|null|undefined;

    /**
     * True when selected union type is a type value.
     */
    readonly unionIsType: boolean|null|undefined;

    /**
     * True when selected union type is an array value.
     */
    readonly unionIsArray: boolean|null|undefined;

    /**
     * Computes value for `range` property.
     *
     * @param shape Current shape object.
     * @returns Range object
     */
    _computeRange(shape: object|null): object|null;

    /**
     * Computes name label for the shape.
     *
     * @param range Range object of current shape.
     * @param shape The shape of the property.
     * @returns Display name of the property
     */
    _computeDisplayName(range: object|null, shape: object|null): String|null;

    /**
     * Computes name of the property. This may be different from the
     * `displayName` if `displayName` is set in API spec.
     *
     * @param range Range object of current shape.
     * @returns Display name of the property
     */
    _computePropertyName(range: object|null): String|null;

    /**
     * Computes value for `hasDisplayName` property.
     * Indicates that `displayName` has been defined in the API specification.
     *
     * @param range Range object of current shape.
     */
    _computeHasDisplayName(range: object|null): Boolean|null;

    /**
     * Computes value for `isRequired` property.
     * In AMF model a property is required when `http://www.w3.org/ns/shacl#minCount`
     * does not equal `0`.
     *
     * @param shape Current shape object
     */
    _computeIsRequired(shape: object|null): Boolean|null;

    /**
     * Computes value for `isUnion` property.
     * Union type is identified as a `http://raml.org/vocabularies/shapes#UnionShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsUnion(range: object|null): Boolean|null;

    /**
     * Computes value for `isObject` property.
     * Object type is identified as a `http://raml.org/vocabularies/shapes#NodeShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsObject(range: object|null): Boolean|null;

    /**
     * Computes value for `isArray` property.
     * Array type is identified as a `http://raml.org/vocabularies/shapes#ArrayShape`
     * type.
     *
     * @param range Range object of current shape.
     */
    _computeIsArray(range: object|null): Boolean|null;

    /**
     * Computes properties to render Array items documentation.
     *
     * @param range Range object of current shape.
     * @returns List of Array items.
     */
    _computeArrayProperties(range: object|null): Array<object|null>|null|undefined;

    /**
     * Computes list of union type labels to render.
     */
    _computeUnionTypes(isUnion: Boolean|null, range: object|null): Array<object|null>|null;

    /**
     * Computes union type label when the union is in Array.
     *
     * @param items Array items property
     * @returns Label for the union type.
     */
    _computeArrayUnionLabel(items: any[]|null): String|null|undefined;

    /**
     * Computes if selectedUnion equals current item index.
     */
    _unionTypeActive(selectedUnion: Number|null, index: Number|null): Boolean|null;

    /**
     * Resets union selection when union types list changes.
     *
     * @param types List of current union types.
     */
    _unionTypesChanged(types: any[]|null): void;

    /**
     * Handler for union type button click.
     * Sets `selectedUnion` property.
     */
    _selectUnion(e: ClickEvent|null): void;

    /**
     * Handler for union type selection change.
     * Updates helper peoprties valus that determine proper view for a
     * type.
     *
     * @param selected Currently selected type.
     * @param types Types list
     */
    _unionSelectionChanged(selected: Number|null, types: Array<object|null>|null): void;

    /**
     * Computes a property value for scalar type union item.
     *
     * @param record Range change record.
     * @param selected Selected union item index.
     * @returns Range object
     */
    _computeUnionProperty(record: object|null, selected: Number|null): object|null|undefined;

    /**
     * Computes list of properties for union item of a type of
     * `http://www.w3.org/ns/shacl#NodeShape`
     *
     * @param record Range change record.
     * @param selected Selected union item index.
     * @returns List of properties
     */
    _computeUnionProperties(record: object|null, selected: Number|null): any[]|null|undefined;

    /**
     * Helper function for the view. Extracts `http://www.w3.org/ns/shacl#property`
     * from the shape model
     *
     * @param item Range object
     * @returns Shape object
     */
    _computeProperties(item: object|null): object|null;
  }
}

interface HTMLElementTagNameMap {
  "property-shape-document": ApiElements.PropertyShapeDocument;
}
