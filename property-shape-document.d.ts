/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   property-shape-document.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html, css} from 'lit-element';

import {AmfHelperMixin} from '@api-components/amf-helper-mixin/amf-helper-mixin.js';

import {PropertyDocumentMixin} from './property-document-mixin.js';

declare namespace ApiElements {

  /**
   * `property-shape-document`
   *
   * Renders a documentation for a shape property of AMF model.
   *
   * ## Styling
   *
   * `<property-shape-document>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--property-shape-document` | Mixin applied to this elment | `{}`
   * `--property-shape-document-array-color` | Property border color when type is an array | `#8BC34A`
   * `--property-shape-document-object-color` | Property border color when type is an object | `#FF9800`
   * `--property-shape-document-union-color` | Property border color when type is an union | `#FFEB3B`
   * `--arc-font-subhead` | Theme mixin, applied to the property title | `{}`
   * `--property-shape-document-title` | Mixin applied to the property title | `{}`
   * `--api-type-document-property-parent-color` | Color of the parent property label | `#757575`
   * `--api-type-document-property-color` | Color of the property name label when display name is used | `#757575`
   * `--api-type-document-child-docs-margin-left` | Margin left of item's description | `0px`
   * `--api-type-document-type-color` | Color of the "type" trait | `white`
   * `--api-type-document-type-background-color` | Background color of the "type" trait | `#2196F3`
   * `--api-type-document-trait-background-color` | Background color to main range trait (type name) | `#EEEEEE`,
   * `--api-type-document-trait-border-radius` | Border radious of a main property traits | `3px`
   * `--api-type-document-property-name-width` | Width of the left hand side column with property name | `240px`
   */
  class PropertyShapeDocument extends
    PropertyDocumentMixin(
    AmfHelperMixin(
    Object)) {
    amf: any;
    shape: any;

    /**
     * Computed value of shape's http://raml.org/vocabularies/shapes#range
     */
    range: object|null;

    /**
     * When set it removes actions bar from the examples render.
     */
    noExamplesActions: boolean|null|undefined;

    /**
     * Should be set if described properties has a parent type.
     * This is used when recursively iterating over properties.
     */
    parentTypeName: string|null|undefined;

    /**
     * Computed value of "display name" of the property
     */
    displayName: string|null|undefined;

    /**
     * A type property name.
     * This may be different from `displayName` property if
     * `displayName` was specified in the API spec for this property.
     */
    propertyName: string|null|undefined;

    /**
     * Computed value, true if `displayName` has been defined for this
     * property.
     */
    hasDisplayName: boolean|null|undefined;

    /**
     * Computed value, true if current property is an union.
     */
    isUnion: boolean|null|undefined;

    /**
     * Computed value, true if current property is an object.
     */
    isObject: boolean|null|undefined;

    /**
     * Computed value, true if current property is an array.
     */
    isArray: boolean|null|undefined;

    /**
     * Computed value, true if this propery contains a complex
     * structure. It is computed when the property is and array,
     * object, or union.
     */
    isComplex: boolean|null|undefined;

    /**
     * Computed value, true if `parentTypeName` has a value.
     */
    hasParentTypeName: boolean|null|undefined;

    /**
     * Computed value of shape data type
     */
    propertyDataType: object|null;

    /**
     * Computed value form the shape. True if the property is required.
     */
    isRequired: boolean|null|undefined;

    /**
     * Computed value form the shape. True if the property is ENUM.
     */
    isEnum: boolean|null|undefined;

    /**
     * A description of the property to render.
     */
    propertyDescription: string|null|undefined;

    /**
     * Computed value, true if desceription is set.
     */
    hasPropertyDescription: boolean|null|undefined;

    /**
     * A property to set when the component is rendered in the narrow
     * view. To be used with mobile rendering or when the
     * components occupies only small part of the screen.
     */
    narrow: boolean|null|undefined;

    /**
     * Computes value for `propertyDescription`.
     *
     * @param range Range model
     * @returns Description to render.
     */
    _computeDescription(range: object|null): String|null;
    _computeType(range: any, shape: any): any;
    _shapeChanged(shape: any): void;
    _rangeChanged(range: any): void;
    _shapeRangeChanged(shape: any, range: any): void;

    /**
     * Computes name of the property. This may be different from the
     * `displayName` if `displayName` is set in API spec.
     *
     * @param range Range object of current shape.
     * @param shape The shape object
     * @returns Display name of the property
     */
    _computePropertyName(range: object|null, shape: object|null): String|null;

    /**
     * Computes value for `hasDisplayName` property.
     * Indicates that `displayName` has been defined in the API specification.
     */
    _computeHasDisplayName(displayName: String|null, propertyName: String|null): Boolean|null;

    /**
     * Computes value for `hasParentTypeName`.
     */
    _computeHasParentTypeName(parentTypeName: String|null): Boolean|null;

    /**
     * Computes value for `isRequired` property.
     * In AMF model a property is required when `http://www.w3.org/ns/shacl#minCount`
     * does not equal `0`.
     *
     * @param shape Current shape object
     */
    _computeIsRequired(shape: object|null): Boolean|null;

    /**
     * Computes value `isEnum` property.
     *
     * @param range Current `range` object.
     * @returns Curently it always returns `false`
     */
    _computeIsEnum(range: object|null): Boolean|null;

    /**
     * Computes value for `isComplex` property.
     */
    _computeIsComplex(isUnion: Boolean|null, isObject: Boolean|null, isArray: Boolean|null): Boolean|null;
    _complexTemplate(): any;
    render(): any;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "property-shape-document": ApiElements.PropertyShapeDocument;
  }
}
